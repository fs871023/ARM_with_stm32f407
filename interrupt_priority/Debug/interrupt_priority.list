
interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c04  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08000dac  08000dac  00010dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e3c  08000e3c  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000e3c  08000e3c  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e3c  08000e3c  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e3c  08000e3c  00010e3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e40  08000e40  00010e40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000e44  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000070  08000eb4  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000eb4  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002178  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000601  00000000  00000000  00022218  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022820  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  00022948  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a86  00000000  00000000  00022a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012b9  00000000  00000000  000254be  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090ba  00000000  00000000  00026777  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f831  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000095c  00000000  00000000  0002f8ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000070 	.word	0x20000070
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000d94 	.word	0x08000d94

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000074 	.word	0x20000074
 80001e4:	08000d94 	.word	0x08000d94

080001e8 <config_prior_for_irqs>:
uint32_t *pNVIC_IPRBase = (uint32_t*)0xE000E400; //priority
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100; //enable
uint32_t *pNVIC_ISPRBase = (uint32_t*)0xE000E200; //pending

void config_prior_for_irqs(uint8_t irq_no, uint8_t prior_val)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b087      	sub	sp, #28
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	460a      	mov	r2, r1
 80001f2:	71fb      	strb	r3, [r7, #7]
 80001f4:	4613      	mov	r3, r2
 80001f6:	71bb      	strb	r3, [r7, #6]
	//1. find out IPRx
	uint8_t iprx = irq_no / 4;
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	089b      	lsrs	r3, r3, #2
 80001fc:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr = pNVIC_IPRBase + iprx;
 80001fe:	4b12      	ldr	r3, [pc, #72]	; (8000248 <config_prior_for_irqs+0x60>)
 8000200:	681a      	ldr	r2, [r3, #0]
 8000202:	7dfb      	ldrb	r3, [r7, #23]
 8000204:	009b      	lsls	r3, r3, #2
 8000206:	4413      	add	r3, r2
 8000208:	613b      	str	r3, [r7, #16]

	//2. find out position in IPRx
	uint8_t pos = (irq_no % 4) * 8;
 800020a:	79fb      	ldrb	r3, [r7, #7]
 800020c:	f003 0303 	and.w	r3, r3, #3
 8000210:	b2db      	uxtb	r3, r3
 8000212:	00db      	lsls	r3, r3, #3
 8000214:	73fb      	strb	r3, [r7, #15]

	//3. configure the priority
	*ipr &= ~(0xFF << pos);//clear priority bit
 8000216:	693b      	ldr	r3, [r7, #16]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	7bfa      	ldrb	r2, [r7, #15]
 800021c:	21ff      	movs	r1, #255	; 0xff
 800021e:	fa01 f202 	lsl.w	r2, r1, r2
 8000222:	43d2      	mvns	r2, r2
 8000224:	401a      	ands	r2, r3
 8000226:	693b      	ldr	r3, [r7, #16]
 8000228:	601a      	str	r2, [r3, #0]
	*ipr |= (prior_val << pos); //placing the priority level
 800022a:	693b      	ldr	r3, [r7, #16]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	79b9      	ldrb	r1, [r7, #6]
 8000230:	7bfa      	ldrb	r2, [r7, #15]
 8000232:	fa01 f202 	lsl.w	r2, r1, r2
 8000236:	431a      	orrs	r2, r3
 8000238:	693b      	ldr	r3, [r7, #16]
 800023a:	601a      	str	r2, [r3, #0]
}
 800023c:	bf00      	nop
 800023e:	371c      	adds	r7, #28
 8000240:	46bd      	mov	sp, r7
 8000242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000246:	4770      	bx	lr
 8000248:	20000000 	.word	0x20000000

0800024c <main>:

int main(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	//1. configure the priority for the peripherals
	// always do priority configuration before enable interrupt
	config_prior_for_irqs(IRQNO_TIMER2, 0x80);
 8000250:	2180      	movs	r1, #128	; 0x80
 8000252:	201c      	movs	r0, #28
 8000254:	f7ff ffc8 	bl	80001e8 <config_prior_for_irqs>
	config_prior_for_irqs(IRQNO_I2C1, 0x70);
 8000258:	2170      	movs	r1, #112	; 0x70
 800025a:	201f      	movs	r0, #31
 800025c:	f7ff ffc4 	bl	80001e8 <config_prior_for_irqs>

	//2. set the interrupt pending bit in the NVIC PR
	*pNVIC_ISPRBase |= (1 << IRQNO_TIMER2); //set TIMER2 pending bit
 8000260:	4b0d      	ldr	r3, [pc, #52]	; (8000298 <main+0x4c>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b0c      	ldr	r3, [pc, #48]	; (8000298 <main+0x4c>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800026e:	601a      	str	r2, [r3, #0]
	//only trigger TIMER2

	//3. enable the IRQs in NVIC ISER
	*pNVIC_ISERBase |= (1 << IRQNO_I2C1);
 8000270:	4b0a      	ldr	r3, [pc, #40]	; (800029c <main+0x50>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b09      	ldr	r3, [pc, #36]	; (800029c <main+0x50>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800027e:	601a      	str	r2, [r3, #0]
	*pNVIC_ISERBase |= (1 << IRQNO_TIMER2);
 8000280:	4b06      	ldr	r3, [pc, #24]	; (800029c <main+0x50>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b05      	ldr	r3, [pc, #20]	; (800029c <main+0x50>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800028e:	601a      	str	r2, [r3, #0]
 8000290:	2300      	movs	r3, #0
//	for(;;);
}
 8000292:	4618      	mov	r0, r3
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	20000008 	.word	0x20000008
 800029c:	20000004 	.word	0x20000004

080002a0 <TIM2_IRQHandler>:
//window -> show view ->SFRs
//IPR7(IRQ priority)
void TIM2_IRQHandler(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	af00      	add	r7, sp, #0
	printf("[TIM2_IRQHandler]\n");
 80002a4:	4805      	ldr	r0, [pc, #20]	; (80002bc <TIM2_IRQHandler+0x1c>)
 80002a6:	f000 f969 	bl	800057c <puts>
	*pNVIC_ISPRBase |= (1 << IRQNO_I2C1);
 80002aa:	4b05      	ldr	r3, [pc, #20]	; (80002c0 <TIM2_IRQHandler+0x20>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	4b03      	ldr	r3, [pc, #12]	; (80002c0 <TIM2_IRQHandler+0x20>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80002b8:	601a      	str	r2, [r3, #0]
	while(1);
 80002ba:	e7fe      	b.n	80002ba <TIM2_IRQHandler+0x1a>
 80002bc:	08000dac 	.word	0x08000dac
 80002c0:	20000008 	.word	0x20000008

080002c4 <I2C1_EV_IRQHandler>:
}
void I2C1_EV_IRQHandler(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0
	printf("[I2C1_EV_IRQHandler]\n");
 80002c8:	4802      	ldr	r0, [pc, #8]	; (80002d4 <I2C1_EV_IRQHandler+0x10>)
 80002ca:	f000 f957 	bl	800057c <puts>
}
 80002ce:	bf00      	nop
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	bf00      	nop
 80002d4:	08000dc0 	.word	0x08000dc0

080002d8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	b086      	sub	sp, #24
 80002dc:	af00      	add	r7, sp, #0
 80002de:	60f8      	str	r0, [r7, #12]
 80002e0:	60b9      	str	r1, [r7, #8]
 80002e2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e4:	2300      	movs	r3, #0
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	e00a      	b.n	8000300 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002ea:	f3af 8000 	nop.w
 80002ee:	4601      	mov	r1, r0
 80002f0:	68bb      	ldr	r3, [r7, #8]
 80002f2:	1c5a      	adds	r2, r3, #1
 80002f4:	60ba      	str	r2, [r7, #8]
 80002f6:	b2ca      	uxtb	r2, r1
 80002f8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	3301      	adds	r3, #1
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	697a      	ldr	r2, [r7, #20]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	429a      	cmp	r2, r3
 8000306:	dbf0      	blt.n	80002ea <_read+0x12>
	}

return len;
 8000308:	687b      	ldr	r3, [r7, #4]
}
 800030a:	4618      	mov	r0, r3
 800030c:	3718      	adds	r7, #24
 800030e:	46bd      	mov	sp, r7
 8000310:	bd80      	pop	{r7, pc}

08000312 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000312:	b580      	push	{r7, lr}
 8000314:	b086      	sub	sp, #24
 8000316:	af00      	add	r7, sp, #0
 8000318:	60f8      	str	r0, [r7, #12]
 800031a:	60b9      	str	r1, [r7, #8]
 800031c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031e:	2300      	movs	r3, #0
 8000320:	617b      	str	r3, [r7, #20]
 8000322:	e009      	b.n	8000338 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000324:	68bb      	ldr	r3, [r7, #8]
 8000326:	1c5a      	adds	r2, r3, #1
 8000328:	60ba      	str	r2, [r7, #8]
 800032a:	781b      	ldrb	r3, [r3, #0]
 800032c:	4618      	mov	r0, r3
 800032e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	697b      	ldr	r3, [r7, #20]
 8000334:	3301      	adds	r3, #1
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	697a      	ldr	r2, [r7, #20]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	429a      	cmp	r2, r3
 800033e:	dbf1      	blt.n	8000324 <_write+0x12>
	}
	return len;
 8000340:	687b      	ldr	r3, [r7, #4]
}
 8000342:	4618      	mov	r0, r3
 8000344:	3718      	adds	r7, #24
 8000346:	46bd      	mov	sp, r7
 8000348:	bd80      	pop	{r7, pc}

0800034a <_close>:

int _close(int file)
{
 800034a:	b480      	push	{r7}
 800034c:	b083      	sub	sp, #12
 800034e:	af00      	add	r7, sp, #0
 8000350:	6078      	str	r0, [r7, #4]
	return -1;
 8000352:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000356:	4618      	mov	r0, r3
 8000358:	370c      	adds	r7, #12
 800035a:	46bd      	mov	sp, r7
 800035c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000360:	4770      	bx	lr

08000362 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
 800036a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800036c:	683b      	ldr	r3, [r7, #0]
 800036e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000372:	605a      	str	r2, [r3, #4]
	return 0;
 8000374:	2300      	movs	r3, #0
}
 8000376:	4618      	mov	r0, r3
 8000378:	370c      	adds	r7, #12
 800037a:	46bd      	mov	sp, r7
 800037c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000380:	4770      	bx	lr

08000382 <_isatty>:

int _isatty(int file)
{
 8000382:	b480      	push	{r7}
 8000384:	b083      	sub	sp, #12
 8000386:	af00      	add	r7, sp, #0
 8000388:	6078      	str	r0, [r7, #4]
	return 1;
 800038a:	2301      	movs	r3, #1
}
 800038c:	4618      	mov	r0, r3
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000396:	4770      	bx	lr

08000398 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000398:	b480      	push	{r7}
 800039a:	b085      	sub	sp, #20
 800039c:	af00      	add	r7, sp, #0
 800039e:	60f8      	str	r0, [r7, #12]
 80003a0:	60b9      	str	r1, [r7, #8]
 80003a2:	607a      	str	r2, [r7, #4]
	return 0;
 80003a4:	2300      	movs	r3, #0
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	3714      	adds	r7, #20
 80003aa:	46bd      	mov	sp, r7
 80003ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b0:	4770      	bx	lr
	...

080003b4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	b084      	sub	sp, #16
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003bc:	4b11      	ldr	r3, [pc, #68]	; (8000404 <_sbrk+0x50>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d102      	bne.n	80003ca <_sbrk+0x16>
		heap_end = &end;
 80003c4:	4b0f      	ldr	r3, [pc, #60]	; (8000404 <_sbrk+0x50>)
 80003c6:	4a10      	ldr	r2, [pc, #64]	; (8000408 <_sbrk+0x54>)
 80003c8:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003ca:	4b0e      	ldr	r3, [pc, #56]	; (8000404 <_sbrk+0x50>)
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003d0:	4b0c      	ldr	r3, [pc, #48]	; (8000404 <_sbrk+0x50>)
 80003d2:	681a      	ldr	r2, [r3, #0]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4413      	add	r3, r2
 80003d8:	466a      	mov	r2, sp
 80003da:	4293      	cmp	r3, r2
 80003dc:	d907      	bls.n	80003ee <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003de:	f000 f83f 	bl	8000460 <__errno>
 80003e2:	4602      	mov	r2, r0
 80003e4:	230c      	movs	r3, #12
 80003e6:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80003e8:	f04f 33ff 	mov.w	r3, #4294967295
 80003ec:	e006      	b.n	80003fc <_sbrk+0x48>
	}

	heap_end += incr;
 80003ee:	4b05      	ldr	r3, [pc, #20]	; (8000404 <_sbrk+0x50>)
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4413      	add	r3, r2
 80003f6:	4a03      	ldr	r2, [pc, #12]	; (8000404 <_sbrk+0x50>)
 80003f8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80003fa:	68fb      	ldr	r3, [r7, #12]
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	3710      	adds	r7, #16
 8000400:	46bd      	mov	sp, r7
 8000402:	bd80      	pop	{r7, pc}
 8000404:	2000008c 	.word	0x2000008c
 8000408:	200000a0 	.word	0x200000a0

0800040c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800040c:	480d      	ldr	r0, [pc, #52]	; (8000444 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800040e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 8000410:	480d      	ldr	r0, [pc, #52]	; (8000448 <LoopForever+0x6>)
  ldr r1, =_edata
 8000412:	490e      	ldr	r1, [pc, #56]	; (800044c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000414:	4a0e      	ldr	r2, [pc, #56]	; (8000450 <LoopForever+0xe>)
  movs r3, #0
 8000416:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000418:	e002      	b.n	8000420 <LoopCopyDataInit>

0800041a <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 800041a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800041c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800041e:	3304      	adds	r3, #4

08000420 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 8000420:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000422:	428c      	cmp	r4, r1



  bcc CopyDataInit
 8000424:	d3f9      	bcc.n	800041a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000426:	4a0b      	ldr	r2, [pc, #44]	; (8000454 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000428:	4c0b      	ldr	r4, [pc, #44]	; (8000458 <LoopForever+0x16>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800042c:	e001      	b.n	8000432 <LoopFillZerobss>

0800042e <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 800042e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000430:	3204      	adds	r2, #4

08000432 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 8000432:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000434:	d3fb      	bcc.n	800042e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000436:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800043a:	f000 f817 	bl	800046c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800043e:	f7ff ff05 	bl	800024c <main>

08000442 <LoopForever>:

LoopForever:
    b LoopForever
 8000442:	e7fe      	b.n	8000442 <LoopForever>
  ldr   r0, =_estack
 8000444:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000448:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800044c:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000450:	08000e44 	.word	0x08000e44
  ldr r2, =_sbss
 8000454:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000458:	2000009c 	.word	0x2000009c

0800045c <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800045c:	e7fe      	b.n	800045c <ADC_IRQHandler>
	...

08000460 <__errno>:
 8000460:	4b01      	ldr	r3, [pc, #4]	; (8000468 <__errno+0x8>)
 8000462:	6818      	ldr	r0, [r3, #0]
 8000464:	4770      	bx	lr
 8000466:	bf00      	nop
 8000468:	2000000c 	.word	0x2000000c

0800046c <__libc_init_array>:
 800046c:	b570      	push	{r4, r5, r6, lr}
 800046e:	4e0d      	ldr	r6, [pc, #52]	; (80004a4 <__libc_init_array+0x38>)
 8000470:	4c0d      	ldr	r4, [pc, #52]	; (80004a8 <__libc_init_array+0x3c>)
 8000472:	1ba4      	subs	r4, r4, r6
 8000474:	10a4      	asrs	r4, r4, #2
 8000476:	2500      	movs	r5, #0
 8000478:	42a5      	cmp	r5, r4
 800047a:	d109      	bne.n	8000490 <__libc_init_array+0x24>
 800047c:	4e0b      	ldr	r6, [pc, #44]	; (80004ac <__libc_init_array+0x40>)
 800047e:	4c0c      	ldr	r4, [pc, #48]	; (80004b0 <__libc_init_array+0x44>)
 8000480:	f000 fc88 	bl	8000d94 <_init>
 8000484:	1ba4      	subs	r4, r4, r6
 8000486:	10a4      	asrs	r4, r4, #2
 8000488:	2500      	movs	r5, #0
 800048a:	42a5      	cmp	r5, r4
 800048c:	d105      	bne.n	800049a <__libc_init_array+0x2e>
 800048e:	bd70      	pop	{r4, r5, r6, pc}
 8000490:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000494:	4798      	blx	r3
 8000496:	3501      	adds	r5, #1
 8000498:	e7ee      	b.n	8000478 <__libc_init_array+0xc>
 800049a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800049e:	4798      	blx	r3
 80004a0:	3501      	adds	r5, #1
 80004a2:	e7f2      	b.n	800048a <__libc_init_array+0x1e>
 80004a4:	08000e3c 	.word	0x08000e3c
 80004a8:	08000e3c 	.word	0x08000e3c
 80004ac:	08000e3c 	.word	0x08000e3c
 80004b0:	08000e40 	.word	0x08000e40

080004b4 <memset>:
 80004b4:	4402      	add	r2, r0
 80004b6:	4603      	mov	r3, r0
 80004b8:	4293      	cmp	r3, r2
 80004ba:	d100      	bne.n	80004be <memset+0xa>
 80004bc:	4770      	bx	lr
 80004be:	f803 1b01 	strb.w	r1, [r3], #1
 80004c2:	e7f9      	b.n	80004b8 <memset+0x4>

080004c4 <_puts_r>:
 80004c4:	b570      	push	{r4, r5, r6, lr}
 80004c6:	460e      	mov	r6, r1
 80004c8:	4605      	mov	r5, r0
 80004ca:	b118      	cbz	r0, 80004d4 <_puts_r+0x10>
 80004cc:	6983      	ldr	r3, [r0, #24]
 80004ce:	b90b      	cbnz	r3, 80004d4 <_puts_r+0x10>
 80004d0:	f000 fa0c 	bl	80008ec <__sinit>
 80004d4:	69ab      	ldr	r3, [r5, #24]
 80004d6:	68ac      	ldr	r4, [r5, #8]
 80004d8:	b913      	cbnz	r3, 80004e0 <_puts_r+0x1c>
 80004da:	4628      	mov	r0, r5
 80004dc:	f000 fa06 	bl	80008ec <__sinit>
 80004e0:	4b23      	ldr	r3, [pc, #140]	; (8000570 <_puts_r+0xac>)
 80004e2:	429c      	cmp	r4, r3
 80004e4:	d117      	bne.n	8000516 <_puts_r+0x52>
 80004e6:	686c      	ldr	r4, [r5, #4]
 80004e8:	89a3      	ldrh	r3, [r4, #12]
 80004ea:	071b      	lsls	r3, r3, #28
 80004ec:	d51d      	bpl.n	800052a <_puts_r+0x66>
 80004ee:	6923      	ldr	r3, [r4, #16]
 80004f0:	b1db      	cbz	r3, 800052a <_puts_r+0x66>
 80004f2:	3e01      	subs	r6, #1
 80004f4:	68a3      	ldr	r3, [r4, #8]
 80004f6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004fa:	3b01      	subs	r3, #1
 80004fc:	60a3      	str	r3, [r4, #8]
 80004fe:	b9e9      	cbnz	r1, 800053c <_puts_r+0x78>
 8000500:	2b00      	cmp	r3, #0
 8000502:	da2e      	bge.n	8000562 <_puts_r+0x9e>
 8000504:	4622      	mov	r2, r4
 8000506:	210a      	movs	r1, #10
 8000508:	4628      	mov	r0, r5
 800050a:	f000 f83f 	bl	800058c <__swbuf_r>
 800050e:	3001      	adds	r0, #1
 8000510:	d011      	beq.n	8000536 <_puts_r+0x72>
 8000512:	200a      	movs	r0, #10
 8000514:	e011      	b.n	800053a <_puts_r+0x76>
 8000516:	4b17      	ldr	r3, [pc, #92]	; (8000574 <_puts_r+0xb0>)
 8000518:	429c      	cmp	r4, r3
 800051a:	d101      	bne.n	8000520 <_puts_r+0x5c>
 800051c:	68ac      	ldr	r4, [r5, #8]
 800051e:	e7e3      	b.n	80004e8 <_puts_r+0x24>
 8000520:	4b15      	ldr	r3, [pc, #84]	; (8000578 <_puts_r+0xb4>)
 8000522:	429c      	cmp	r4, r3
 8000524:	bf08      	it	eq
 8000526:	68ec      	ldreq	r4, [r5, #12]
 8000528:	e7de      	b.n	80004e8 <_puts_r+0x24>
 800052a:	4621      	mov	r1, r4
 800052c:	4628      	mov	r0, r5
 800052e:	f000 f87f 	bl	8000630 <__swsetup_r>
 8000532:	2800      	cmp	r0, #0
 8000534:	d0dd      	beq.n	80004f2 <_puts_r+0x2e>
 8000536:	f04f 30ff 	mov.w	r0, #4294967295
 800053a:	bd70      	pop	{r4, r5, r6, pc}
 800053c:	2b00      	cmp	r3, #0
 800053e:	da04      	bge.n	800054a <_puts_r+0x86>
 8000540:	69a2      	ldr	r2, [r4, #24]
 8000542:	429a      	cmp	r2, r3
 8000544:	dc06      	bgt.n	8000554 <_puts_r+0x90>
 8000546:	290a      	cmp	r1, #10
 8000548:	d004      	beq.n	8000554 <_puts_r+0x90>
 800054a:	6823      	ldr	r3, [r4, #0]
 800054c:	1c5a      	adds	r2, r3, #1
 800054e:	6022      	str	r2, [r4, #0]
 8000550:	7019      	strb	r1, [r3, #0]
 8000552:	e7cf      	b.n	80004f4 <_puts_r+0x30>
 8000554:	4622      	mov	r2, r4
 8000556:	4628      	mov	r0, r5
 8000558:	f000 f818 	bl	800058c <__swbuf_r>
 800055c:	3001      	adds	r0, #1
 800055e:	d1c9      	bne.n	80004f4 <_puts_r+0x30>
 8000560:	e7e9      	b.n	8000536 <_puts_r+0x72>
 8000562:	6823      	ldr	r3, [r4, #0]
 8000564:	200a      	movs	r0, #10
 8000566:	1c5a      	adds	r2, r3, #1
 8000568:	6022      	str	r2, [r4, #0]
 800056a:	7018      	strb	r0, [r3, #0]
 800056c:	e7e5      	b.n	800053a <_puts_r+0x76>
 800056e:	bf00      	nop
 8000570:	08000dfc 	.word	0x08000dfc
 8000574:	08000e1c 	.word	0x08000e1c
 8000578:	08000ddc 	.word	0x08000ddc

0800057c <puts>:
 800057c:	4b02      	ldr	r3, [pc, #8]	; (8000588 <puts+0xc>)
 800057e:	4601      	mov	r1, r0
 8000580:	6818      	ldr	r0, [r3, #0]
 8000582:	f7ff bf9f 	b.w	80004c4 <_puts_r>
 8000586:	bf00      	nop
 8000588:	2000000c 	.word	0x2000000c

0800058c <__swbuf_r>:
 800058c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800058e:	460e      	mov	r6, r1
 8000590:	4614      	mov	r4, r2
 8000592:	4605      	mov	r5, r0
 8000594:	b118      	cbz	r0, 800059e <__swbuf_r+0x12>
 8000596:	6983      	ldr	r3, [r0, #24]
 8000598:	b90b      	cbnz	r3, 800059e <__swbuf_r+0x12>
 800059a:	f000 f9a7 	bl	80008ec <__sinit>
 800059e:	4b21      	ldr	r3, [pc, #132]	; (8000624 <__swbuf_r+0x98>)
 80005a0:	429c      	cmp	r4, r3
 80005a2:	d12a      	bne.n	80005fa <__swbuf_r+0x6e>
 80005a4:	686c      	ldr	r4, [r5, #4]
 80005a6:	69a3      	ldr	r3, [r4, #24]
 80005a8:	60a3      	str	r3, [r4, #8]
 80005aa:	89a3      	ldrh	r3, [r4, #12]
 80005ac:	071a      	lsls	r2, r3, #28
 80005ae:	d52e      	bpl.n	800060e <__swbuf_r+0x82>
 80005b0:	6923      	ldr	r3, [r4, #16]
 80005b2:	b363      	cbz	r3, 800060e <__swbuf_r+0x82>
 80005b4:	6923      	ldr	r3, [r4, #16]
 80005b6:	6820      	ldr	r0, [r4, #0]
 80005b8:	1ac0      	subs	r0, r0, r3
 80005ba:	6963      	ldr	r3, [r4, #20]
 80005bc:	b2f6      	uxtb	r6, r6
 80005be:	4283      	cmp	r3, r0
 80005c0:	4637      	mov	r7, r6
 80005c2:	dc04      	bgt.n	80005ce <__swbuf_r+0x42>
 80005c4:	4621      	mov	r1, r4
 80005c6:	4628      	mov	r0, r5
 80005c8:	f000 f926 	bl	8000818 <_fflush_r>
 80005cc:	bb28      	cbnz	r0, 800061a <__swbuf_r+0x8e>
 80005ce:	68a3      	ldr	r3, [r4, #8]
 80005d0:	3b01      	subs	r3, #1
 80005d2:	60a3      	str	r3, [r4, #8]
 80005d4:	6823      	ldr	r3, [r4, #0]
 80005d6:	1c5a      	adds	r2, r3, #1
 80005d8:	6022      	str	r2, [r4, #0]
 80005da:	701e      	strb	r6, [r3, #0]
 80005dc:	6963      	ldr	r3, [r4, #20]
 80005de:	3001      	adds	r0, #1
 80005e0:	4283      	cmp	r3, r0
 80005e2:	d004      	beq.n	80005ee <__swbuf_r+0x62>
 80005e4:	89a3      	ldrh	r3, [r4, #12]
 80005e6:	07db      	lsls	r3, r3, #31
 80005e8:	d519      	bpl.n	800061e <__swbuf_r+0x92>
 80005ea:	2e0a      	cmp	r6, #10
 80005ec:	d117      	bne.n	800061e <__swbuf_r+0x92>
 80005ee:	4621      	mov	r1, r4
 80005f0:	4628      	mov	r0, r5
 80005f2:	f000 f911 	bl	8000818 <_fflush_r>
 80005f6:	b190      	cbz	r0, 800061e <__swbuf_r+0x92>
 80005f8:	e00f      	b.n	800061a <__swbuf_r+0x8e>
 80005fa:	4b0b      	ldr	r3, [pc, #44]	; (8000628 <__swbuf_r+0x9c>)
 80005fc:	429c      	cmp	r4, r3
 80005fe:	d101      	bne.n	8000604 <__swbuf_r+0x78>
 8000600:	68ac      	ldr	r4, [r5, #8]
 8000602:	e7d0      	b.n	80005a6 <__swbuf_r+0x1a>
 8000604:	4b09      	ldr	r3, [pc, #36]	; (800062c <__swbuf_r+0xa0>)
 8000606:	429c      	cmp	r4, r3
 8000608:	bf08      	it	eq
 800060a:	68ec      	ldreq	r4, [r5, #12]
 800060c:	e7cb      	b.n	80005a6 <__swbuf_r+0x1a>
 800060e:	4621      	mov	r1, r4
 8000610:	4628      	mov	r0, r5
 8000612:	f000 f80d 	bl	8000630 <__swsetup_r>
 8000616:	2800      	cmp	r0, #0
 8000618:	d0cc      	beq.n	80005b4 <__swbuf_r+0x28>
 800061a:	f04f 37ff 	mov.w	r7, #4294967295
 800061e:	4638      	mov	r0, r7
 8000620:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000622:	bf00      	nop
 8000624:	08000dfc 	.word	0x08000dfc
 8000628:	08000e1c 	.word	0x08000e1c
 800062c:	08000ddc 	.word	0x08000ddc

08000630 <__swsetup_r>:
 8000630:	4b32      	ldr	r3, [pc, #200]	; (80006fc <__swsetup_r+0xcc>)
 8000632:	b570      	push	{r4, r5, r6, lr}
 8000634:	681d      	ldr	r5, [r3, #0]
 8000636:	4606      	mov	r6, r0
 8000638:	460c      	mov	r4, r1
 800063a:	b125      	cbz	r5, 8000646 <__swsetup_r+0x16>
 800063c:	69ab      	ldr	r3, [r5, #24]
 800063e:	b913      	cbnz	r3, 8000646 <__swsetup_r+0x16>
 8000640:	4628      	mov	r0, r5
 8000642:	f000 f953 	bl	80008ec <__sinit>
 8000646:	4b2e      	ldr	r3, [pc, #184]	; (8000700 <__swsetup_r+0xd0>)
 8000648:	429c      	cmp	r4, r3
 800064a:	d10f      	bne.n	800066c <__swsetup_r+0x3c>
 800064c:	686c      	ldr	r4, [r5, #4]
 800064e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000652:	b29a      	uxth	r2, r3
 8000654:	0715      	lsls	r5, r2, #28
 8000656:	d42c      	bmi.n	80006b2 <__swsetup_r+0x82>
 8000658:	06d0      	lsls	r0, r2, #27
 800065a:	d411      	bmi.n	8000680 <__swsetup_r+0x50>
 800065c:	2209      	movs	r2, #9
 800065e:	6032      	str	r2, [r6, #0]
 8000660:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000664:	81a3      	strh	r3, [r4, #12]
 8000666:	f04f 30ff 	mov.w	r0, #4294967295
 800066a:	e03e      	b.n	80006ea <__swsetup_r+0xba>
 800066c:	4b25      	ldr	r3, [pc, #148]	; (8000704 <__swsetup_r+0xd4>)
 800066e:	429c      	cmp	r4, r3
 8000670:	d101      	bne.n	8000676 <__swsetup_r+0x46>
 8000672:	68ac      	ldr	r4, [r5, #8]
 8000674:	e7eb      	b.n	800064e <__swsetup_r+0x1e>
 8000676:	4b24      	ldr	r3, [pc, #144]	; (8000708 <__swsetup_r+0xd8>)
 8000678:	429c      	cmp	r4, r3
 800067a:	bf08      	it	eq
 800067c:	68ec      	ldreq	r4, [r5, #12]
 800067e:	e7e6      	b.n	800064e <__swsetup_r+0x1e>
 8000680:	0751      	lsls	r1, r2, #29
 8000682:	d512      	bpl.n	80006aa <__swsetup_r+0x7a>
 8000684:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000686:	b141      	cbz	r1, 800069a <__swsetup_r+0x6a>
 8000688:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800068c:	4299      	cmp	r1, r3
 800068e:	d002      	beq.n	8000696 <__swsetup_r+0x66>
 8000690:	4630      	mov	r0, r6
 8000692:	f000 fa19 	bl	8000ac8 <_free_r>
 8000696:	2300      	movs	r3, #0
 8000698:	6363      	str	r3, [r4, #52]	; 0x34
 800069a:	89a3      	ldrh	r3, [r4, #12]
 800069c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006a0:	81a3      	strh	r3, [r4, #12]
 80006a2:	2300      	movs	r3, #0
 80006a4:	6063      	str	r3, [r4, #4]
 80006a6:	6923      	ldr	r3, [r4, #16]
 80006a8:	6023      	str	r3, [r4, #0]
 80006aa:	89a3      	ldrh	r3, [r4, #12]
 80006ac:	f043 0308 	orr.w	r3, r3, #8
 80006b0:	81a3      	strh	r3, [r4, #12]
 80006b2:	6923      	ldr	r3, [r4, #16]
 80006b4:	b94b      	cbnz	r3, 80006ca <__swsetup_r+0x9a>
 80006b6:	89a3      	ldrh	r3, [r4, #12]
 80006b8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006bc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006c0:	d003      	beq.n	80006ca <__swsetup_r+0x9a>
 80006c2:	4621      	mov	r1, r4
 80006c4:	4630      	mov	r0, r6
 80006c6:	f000 f9bf 	bl	8000a48 <__smakebuf_r>
 80006ca:	89a2      	ldrh	r2, [r4, #12]
 80006cc:	f012 0301 	ands.w	r3, r2, #1
 80006d0:	d00c      	beq.n	80006ec <__swsetup_r+0xbc>
 80006d2:	2300      	movs	r3, #0
 80006d4:	60a3      	str	r3, [r4, #8]
 80006d6:	6963      	ldr	r3, [r4, #20]
 80006d8:	425b      	negs	r3, r3
 80006da:	61a3      	str	r3, [r4, #24]
 80006dc:	6923      	ldr	r3, [r4, #16]
 80006de:	b953      	cbnz	r3, 80006f6 <__swsetup_r+0xc6>
 80006e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006e4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80006e8:	d1ba      	bne.n	8000660 <__swsetup_r+0x30>
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	0792      	lsls	r2, r2, #30
 80006ee:	bf58      	it	pl
 80006f0:	6963      	ldrpl	r3, [r4, #20]
 80006f2:	60a3      	str	r3, [r4, #8]
 80006f4:	e7f2      	b.n	80006dc <__swsetup_r+0xac>
 80006f6:	2000      	movs	r0, #0
 80006f8:	e7f7      	b.n	80006ea <__swsetup_r+0xba>
 80006fa:	bf00      	nop
 80006fc:	2000000c 	.word	0x2000000c
 8000700:	08000dfc 	.word	0x08000dfc
 8000704:	08000e1c 	.word	0x08000e1c
 8000708:	08000ddc 	.word	0x08000ddc

0800070c <__sflush_r>:
 800070c:	898a      	ldrh	r2, [r1, #12]
 800070e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000712:	4605      	mov	r5, r0
 8000714:	0710      	lsls	r0, r2, #28
 8000716:	460c      	mov	r4, r1
 8000718:	d458      	bmi.n	80007cc <__sflush_r+0xc0>
 800071a:	684b      	ldr	r3, [r1, #4]
 800071c:	2b00      	cmp	r3, #0
 800071e:	dc05      	bgt.n	800072c <__sflush_r+0x20>
 8000720:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000722:	2b00      	cmp	r3, #0
 8000724:	dc02      	bgt.n	800072c <__sflush_r+0x20>
 8000726:	2000      	movs	r0, #0
 8000728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800072c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800072e:	2e00      	cmp	r6, #0
 8000730:	d0f9      	beq.n	8000726 <__sflush_r+0x1a>
 8000732:	2300      	movs	r3, #0
 8000734:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000738:	682f      	ldr	r7, [r5, #0]
 800073a:	6a21      	ldr	r1, [r4, #32]
 800073c:	602b      	str	r3, [r5, #0]
 800073e:	d032      	beq.n	80007a6 <__sflush_r+0x9a>
 8000740:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	075a      	lsls	r2, r3, #29
 8000746:	d505      	bpl.n	8000754 <__sflush_r+0x48>
 8000748:	6863      	ldr	r3, [r4, #4]
 800074a:	1ac0      	subs	r0, r0, r3
 800074c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800074e:	b10b      	cbz	r3, 8000754 <__sflush_r+0x48>
 8000750:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000752:	1ac0      	subs	r0, r0, r3
 8000754:	2300      	movs	r3, #0
 8000756:	4602      	mov	r2, r0
 8000758:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800075a:	6a21      	ldr	r1, [r4, #32]
 800075c:	4628      	mov	r0, r5
 800075e:	47b0      	blx	r6
 8000760:	1c43      	adds	r3, r0, #1
 8000762:	89a3      	ldrh	r3, [r4, #12]
 8000764:	d106      	bne.n	8000774 <__sflush_r+0x68>
 8000766:	6829      	ldr	r1, [r5, #0]
 8000768:	291d      	cmp	r1, #29
 800076a:	d848      	bhi.n	80007fe <__sflush_r+0xf2>
 800076c:	4a29      	ldr	r2, [pc, #164]	; (8000814 <__sflush_r+0x108>)
 800076e:	40ca      	lsrs	r2, r1
 8000770:	07d6      	lsls	r6, r2, #31
 8000772:	d544      	bpl.n	80007fe <__sflush_r+0xf2>
 8000774:	2200      	movs	r2, #0
 8000776:	6062      	str	r2, [r4, #4]
 8000778:	04d9      	lsls	r1, r3, #19
 800077a:	6922      	ldr	r2, [r4, #16]
 800077c:	6022      	str	r2, [r4, #0]
 800077e:	d504      	bpl.n	800078a <__sflush_r+0x7e>
 8000780:	1c42      	adds	r2, r0, #1
 8000782:	d101      	bne.n	8000788 <__sflush_r+0x7c>
 8000784:	682b      	ldr	r3, [r5, #0]
 8000786:	b903      	cbnz	r3, 800078a <__sflush_r+0x7e>
 8000788:	6560      	str	r0, [r4, #84]	; 0x54
 800078a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800078c:	602f      	str	r7, [r5, #0]
 800078e:	2900      	cmp	r1, #0
 8000790:	d0c9      	beq.n	8000726 <__sflush_r+0x1a>
 8000792:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000796:	4299      	cmp	r1, r3
 8000798:	d002      	beq.n	80007a0 <__sflush_r+0x94>
 800079a:	4628      	mov	r0, r5
 800079c:	f000 f994 	bl	8000ac8 <_free_r>
 80007a0:	2000      	movs	r0, #0
 80007a2:	6360      	str	r0, [r4, #52]	; 0x34
 80007a4:	e7c0      	b.n	8000728 <__sflush_r+0x1c>
 80007a6:	2301      	movs	r3, #1
 80007a8:	4628      	mov	r0, r5
 80007aa:	47b0      	blx	r6
 80007ac:	1c41      	adds	r1, r0, #1
 80007ae:	d1c8      	bne.n	8000742 <__sflush_r+0x36>
 80007b0:	682b      	ldr	r3, [r5, #0]
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d0c5      	beq.n	8000742 <__sflush_r+0x36>
 80007b6:	2b1d      	cmp	r3, #29
 80007b8:	d001      	beq.n	80007be <__sflush_r+0xb2>
 80007ba:	2b16      	cmp	r3, #22
 80007bc:	d101      	bne.n	80007c2 <__sflush_r+0xb6>
 80007be:	602f      	str	r7, [r5, #0]
 80007c0:	e7b1      	b.n	8000726 <__sflush_r+0x1a>
 80007c2:	89a3      	ldrh	r3, [r4, #12]
 80007c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007c8:	81a3      	strh	r3, [r4, #12]
 80007ca:	e7ad      	b.n	8000728 <__sflush_r+0x1c>
 80007cc:	690f      	ldr	r7, [r1, #16]
 80007ce:	2f00      	cmp	r7, #0
 80007d0:	d0a9      	beq.n	8000726 <__sflush_r+0x1a>
 80007d2:	0793      	lsls	r3, r2, #30
 80007d4:	680e      	ldr	r6, [r1, #0]
 80007d6:	bf08      	it	eq
 80007d8:	694b      	ldreq	r3, [r1, #20]
 80007da:	600f      	str	r7, [r1, #0]
 80007dc:	bf18      	it	ne
 80007de:	2300      	movne	r3, #0
 80007e0:	eba6 0807 	sub.w	r8, r6, r7
 80007e4:	608b      	str	r3, [r1, #8]
 80007e6:	f1b8 0f00 	cmp.w	r8, #0
 80007ea:	dd9c      	ble.n	8000726 <__sflush_r+0x1a>
 80007ec:	4643      	mov	r3, r8
 80007ee:	463a      	mov	r2, r7
 80007f0:	6a21      	ldr	r1, [r4, #32]
 80007f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80007f4:	4628      	mov	r0, r5
 80007f6:	47b0      	blx	r6
 80007f8:	2800      	cmp	r0, #0
 80007fa:	dc06      	bgt.n	800080a <__sflush_r+0xfe>
 80007fc:	89a3      	ldrh	r3, [r4, #12]
 80007fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000802:	81a3      	strh	r3, [r4, #12]
 8000804:	f04f 30ff 	mov.w	r0, #4294967295
 8000808:	e78e      	b.n	8000728 <__sflush_r+0x1c>
 800080a:	4407      	add	r7, r0
 800080c:	eba8 0800 	sub.w	r8, r8, r0
 8000810:	e7e9      	b.n	80007e6 <__sflush_r+0xda>
 8000812:	bf00      	nop
 8000814:	20400001 	.word	0x20400001

08000818 <_fflush_r>:
 8000818:	b538      	push	{r3, r4, r5, lr}
 800081a:	690b      	ldr	r3, [r1, #16]
 800081c:	4605      	mov	r5, r0
 800081e:	460c      	mov	r4, r1
 8000820:	b1db      	cbz	r3, 800085a <_fflush_r+0x42>
 8000822:	b118      	cbz	r0, 800082c <_fflush_r+0x14>
 8000824:	6983      	ldr	r3, [r0, #24]
 8000826:	b90b      	cbnz	r3, 800082c <_fflush_r+0x14>
 8000828:	f000 f860 	bl	80008ec <__sinit>
 800082c:	4b0c      	ldr	r3, [pc, #48]	; (8000860 <_fflush_r+0x48>)
 800082e:	429c      	cmp	r4, r3
 8000830:	d109      	bne.n	8000846 <_fflush_r+0x2e>
 8000832:	686c      	ldr	r4, [r5, #4]
 8000834:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000838:	b17b      	cbz	r3, 800085a <_fflush_r+0x42>
 800083a:	4621      	mov	r1, r4
 800083c:	4628      	mov	r0, r5
 800083e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000842:	f7ff bf63 	b.w	800070c <__sflush_r>
 8000846:	4b07      	ldr	r3, [pc, #28]	; (8000864 <_fflush_r+0x4c>)
 8000848:	429c      	cmp	r4, r3
 800084a:	d101      	bne.n	8000850 <_fflush_r+0x38>
 800084c:	68ac      	ldr	r4, [r5, #8]
 800084e:	e7f1      	b.n	8000834 <_fflush_r+0x1c>
 8000850:	4b05      	ldr	r3, [pc, #20]	; (8000868 <_fflush_r+0x50>)
 8000852:	429c      	cmp	r4, r3
 8000854:	bf08      	it	eq
 8000856:	68ec      	ldreq	r4, [r5, #12]
 8000858:	e7ec      	b.n	8000834 <_fflush_r+0x1c>
 800085a:	2000      	movs	r0, #0
 800085c:	bd38      	pop	{r3, r4, r5, pc}
 800085e:	bf00      	nop
 8000860:	08000dfc 	.word	0x08000dfc
 8000864:	08000e1c 	.word	0x08000e1c
 8000868:	08000ddc 	.word	0x08000ddc

0800086c <std>:
 800086c:	2300      	movs	r3, #0
 800086e:	b510      	push	{r4, lr}
 8000870:	4604      	mov	r4, r0
 8000872:	e9c0 3300 	strd	r3, r3, [r0]
 8000876:	6083      	str	r3, [r0, #8]
 8000878:	8181      	strh	r1, [r0, #12]
 800087a:	6643      	str	r3, [r0, #100]	; 0x64
 800087c:	81c2      	strh	r2, [r0, #14]
 800087e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000882:	6183      	str	r3, [r0, #24]
 8000884:	4619      	mov	r1, r3
 8000886:	2208      	movs	r2, #8
 8000888:	305c      	adds	r0, #92	; 0x5c
 800088a:	f7ff fe13 	bl	80004b4 <memset>
 800088e:	4b05      	ldr	r3, [pc, #20]	; (80008a4 <std+0x38>)
 8000890:	6263      	str	r3, [r4, #36]	; 0x24
 8000892:	4b05      	ldr	r3, [pc, #20]	; (80008a8 <std+0x3c>)
 8000894:	62a3      	str	r3, [r4, #40]	; 0x28
 8000896:	4b05      	ldr	r3, [pc, #20]	; (80008ac <std+0x40>)
 8000898:	62e3      	str	r3, [r4, #44]	; 0x2c
 800089a:	4b05      	ldr	r3, [pc, #20]	; (80008b0 <std+0x44>)
 800089c:	6224      	str	r4, [r4, #32]
 800089e:	6323      	str	r3, [r4, #48]	; 0x30
 80008a0:	bd10      	pop	{r4, pc}
 80008a2:	bf00      	nop
 80008a4:	08000c39 	.word	0x08000c39
 80008a8:	08000c5b 	.word	0x08000c5b
 80008ac:	08000c93 	.word	0x08000c93
 80008b0:	08000cb7 	.word	0x08000cb7

080008b4 <_cleanup_r>:
 80008b4:	4901      	ldr	r1, [pc, #4]	; (80008bc <_cleanup_r+0x8>)
 80008b6:	f000 b885 	b.w	80009c4 <_fwalk_reent>
 80008ba:	bf00      	nop
 80008bc:	08000819 	.word	0x08000819

080008c0 <__sfmoreglue>:
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	1e4a      	subs	r2, r1, #1
 80008c4:	2568      	movs	r5, #104	; 0x68
 80008c6:	4355      	muls	r5, r2
 80008c8:	460e      	mov	r6, r1
 80008ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008ce:	f000 f949 	bl	8000b64 <_malloc_r>
 80008d2:	4604      	mov	r4, r0
 80008d4:	b140      	cbz	r0, 80008e8 <__sfmoreglue+0x28>
 80008d6:	2100      	movs	r1, #0
 80008d8:	e9c0 1600 	strd	r1, r6, [r0]
 80008dc:	300c      	adds	r0, #12
 80008de:	60a0      	str	r0, [r4, #8]
 80008e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008e4:	f7ff fde6 	bl	80004b4 <memset>
 80008e8:	4620      	mov	r0, r4
 80008ea:	bd70      	pop	{r4, r5, r6, pc}

080008ec <__sinit>:
 80008ec:	6983      	ldr	r3, [r0, #24]
 80008ee:	b510      	push	{r4, lr}
 80008f0:	4604      	mov	r4, r0
 80008f2:	bb33      	cbnz	r3, 8000942 <__sinit+0x56>
 80008f4:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80008f8:	6503      	str	r3, [r0, #80]	; 0x50
 80008fa:	4b12      	ldr	r3, [pc, #72]	; (8000944 <__sinit+0x58>)
 80008fc:	4a12      	ldr	r2, [pc, #72]	; (8000948 <__sinit+0x5c>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	6282      	str	r2, [r0, #40]	; 0x28
 8000902:	4298      	cmp	r0, r3
 8000904:	bf04      	itt	eq
 8000906:	2301      	moveq	r3, #1
 8000908:	6183      	streq	r3, [r0, #24]
 800090a:	f000 f81f 	bl	800094c <__sfp>
 800090e:	6060      	str	r0, [r4, #4]
 8000910:	4620      	mov	r0, r4
 8000912:	f000 f81b 	bl	800094c <__sfp>
 8000916:	60a0      	str	r0, [r4, #8]
 8000918:	4620      	mov	r0, r4
 800091a:	f000 f817 	bl	800094c <__sfp>
 800091e:	2200      	movs	r2, #0
 8000920:	60e0      	str	r0, [r4, #12]
 8000922:	2104      	movs	r1, #4
 8000924:	6860      	ldr	r0, [r4, #4]
 8000926:	f7ff ffa1 	bl	800086c <std>
 800092a:	2201      	movs	r2, #1
 800092c:	2109      	movs	r1, #9
 800092e:	68a0      	ldr	r0, [r4, #8]
 8000930:	f7ff ff9c 	bl	800086c <std>
 8000934:	2202      	movs	r2, #2
 8000936:	2112      	movs	r1, #18
 8000938:	68e0      	ldr	r0, [r4, #12]
 800093a:	f7ff ff97 	bl	800086c <std>
 800093e:	2301      	movs	r3, #1
 8000940:	61a3      	str	r3, [r4, #24]
 8000942:	bd10      	pop	{r4, pc}
 8000944:	08000dd8 	.word	0x08000dd8
 8000948:	080008b5 	.word	0x080008b5

0800094c <__sfp>:
 800094c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800094e:	4b1b      	ldr	r3, [pc, #108]	; (80009bc <__sfp+0x70>)
 8000950:	681e      	ldr	r6, [r3, #0]
 8000952:	69b3      	ldr	r3, [r6, #24]
 8000954:	4607      	mov	r7, r0
 8000956:	b913      	cbnz	r3, 800095e <__sfp+0x12>
 8000958:	4630      	mov	r0, r6
 800095a:	f7ff ffc7 	bl	80008ec <__sinit>
 800095e:	3648      	adds	r6, #72	; 0x48
 8000960:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000964:	3b01      	subs	r3, #1
 8000966:	d503      	bpl.n	8000970 <__sfp+0x24>
 8000968:	6833      	ldr	r3, [r6, #0]
 800096a:	b133      	cbz	r3, 800097a <__sfp+0x2e>
 800096c:	6836      	ldr	r6, [r6, #0]
 800096e:	e7f7      	b.n	8000960 <__sfp+0x14>
 8000970:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000974:	b16d      	cbz	r5, 8000992 <__sfp+0x46>
 8000976:	3468      	adds	r4, #104	; 0x68
 8000978:	e7f4      	b.n	8000964 <__sfp+0x18>
 800097a:	2104      	movs	r1, #4
 800097c:	4638      	mov	r0, r7
 800097e:	f7ff ff9f 	bl	80008c0 <__sfmoreglue>
 8000982:	6030      	str	r0, [r6, #0]
 8000984:	2800      	cmp	r0, #0
 8000986:	d1f1      	bne.n	800096c <__sfp+0x20>
 8000988:	230c      	movs	r3, #12
 800098a:	603b      	str	r3, [r7, #0]
 800098c:	4604      	mov	r4, r0
 800098e:	4620      	mov	r0, r4
 8000990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000992:	4b0b      	ldr	r3, [pc, #44]	; (80009c0 <__sfp+0x74>)
 8000994:	6665      	str	r5, [r4, #100]	; 0x64
 8000996:	e9c4 5500 	strd	r5, r5, [r4]
 800099a:	60a5      	str	r5, [r4, #8]
 800099c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80009a0:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80009a4:	2208      	movs	r2, #8
 80009a6:	4629      	mov	r1, r5
 80009a8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009ac:	f7ff fd82 	bl	80004b4 <memset>
 80009b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009b8:	e7e9      	b.n	800098e <__sfp+0x42>
 80009ba:	bf00      	nop
 80009bc:	08000dd8 	.word	0x08000dd8
 80009c0:	ffff0001 	.word	0xffff0001

080009c4 <_fwalk_reent>:
 80009c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009c8:	4680      	mov	r8, r0
 80009ca:	4689      	mov	r9, r1
 80009cc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009d0:	2600      	movs	r6, #0
 80009d2:	b914      	cbnz	r4, 80009da <_fwalk_reent+0x16>
 80009d4:	4630      	mov	r0, r6
 80009d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009da:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80009de:	3f01      	subs	r7, #1
 80009e0:	d501      	bpl.n	80009e6 <_fwalk_reent+0x22>
 80009e2:	6824      	ldr	r4, [r4, #0]
 80009e4:	e7f5      	b.n	80009d2 <_fwalk_reent+0xe>
 80009e6:	89ab      	ldrh	r3, [r5, #12]
 80009e8:	2b01      	cmp	r3, #1
 80009ea:	d907      	bls.n	80009fc <_fwalk_reent+0x38>
 80009ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009f0:	3301      	adds	r3, #1
 80009f2:	d003      	beq.n	80009fc <_fwalk_reent+0x38>
 80009f4:	4629      	mov	r1, r5
 80009f6:	4640      	mov	r0, r8
 80009f8:	47c8      	blx	r9
 80009fa:	4306      	orrs	r6, r0
 80009fc:	3568      	adds	r5, #104	; 0x68
 80009fe:	e7ee      	b.n	80009de <_fwalk_reent+0x1a>

08000a00 <__swhatbuf_r>:
 8000a00:	b570      	push	{r4, r5, r6, lr}
 8000a02:	460e      	mov	r6, r1
 8000a04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a08:	2900      	cmp	r1, #0
 8000a0a:	b096      	sub	sp, #88	; 0x58
 8000a0c:	4614      	mov	r4, r2
 8000a0e:	461d      	mov	r5, r3
 8000a10:	da07      	bge.n	8000a22 <__swhatbuf_r+0x22>
 8000a12:	2300      	movs	r3, #0
 8000a14:	602b      	str	r3, [r5, #0]
 8000a16:	89b3      	ldrh	r3, [r6, #12]
 8000a18:	061a      	lsls	r2, r3, #24
 8000a1a:	d410      	bmi.n	8000a3e <__swhatbuf_r+0x3e>
 8000a1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a20:	e00e      	b.n	8000a40 <__swhatbuf_r+0x40>
 8000a22:	466a      	mov	r2, sp
 8000a24:	f000 f96e 	bl	8000d04 <_fstat_r>
 8000a28:	2800      	cmp	r0, #0
 8000a2a:	dbf2      	blt.n	8000a12 <__swhatbuf_r+0x12>
 8000a2c:	9a01      	ldr	r2, [sp, #4]
 8000a2e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a32:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a36:	425a      	negs	r2, r3
 8000a38:	415a      	adcs	r2, r3
 8000a3a:	602a      	str	r2, [r5, #0]
 8000a3c:	e7ee      	b.n	8000a1c <__swhatbuf_r+0x1c>
 8000a3e:	2340      	movs	r3, #64	; 0x40
 8000a40:	2000      	movs	r0, #0
 8000a42:	6023      	str	r3, [r4, #0]
 8000a44:	b016      	add	sp, #88	; 0x58
 8000a46:	bd70      	pop	{r4, r5, r6, pc}

08000a48 <__smakebuf_r>:
 8000a48:	898b      	ldrh	r3, [r1, #12]
 8000a4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a4c:	079d      	lsls	r5, r3, #30
 8000a4e:	4606      	mov	r6, r0
 8000a50:	460c      	mov	r4, r1
 8000a52:	d507      	bpl.n	8000a64 <__smakebuf_r+0x1c>
 8000a54:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a58:	6023      	str	r3, [r4, #0]
 8000a5a:	6123      	str	r3, [r4, #16]
 8000a5c:	2301      	movs	r3, #1
 8000a5e:	6163      	str	r3, [r4, #20]
 8000a60:	b002      	add	sp, #8
 8000a62:	bd70      	pop	{r4, r5, r6, pc}
 8000a64:	ab01      	add	r3, sp, #4
 8000a66:	466a      	mov	r2, sp
 8000a68:	f7ff ffca 	bl	8000a00 <__swhatbuf_r>
 8000a6c:	9900      	ldr	r1, [sp, #0]
 8000a6e:	4605      	mov	r5, r0
 8000a70:	4630      	mov	r0, r6
 8000a72:	f000 f877 	bl	8000b64 <_malloc_r>
 8000a76:	b948      	cbnz	r0, 8000a8c <__smakebuf_r+0x44>
 8000a78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a7c:	059a      	lsls	r2, r3, #22
 8000a7e:	d4ef      	bmi.n	8000a60 <__smakebuf_r+0x18>
 8000a80:	f023 0303 	bic.w	r3, r3, #3
 8000a84:	f043 0302 	orr.w	r3, r3, #2
 8000a88:	81a3      	strh	r3, [r4, #12]
 8000a8a:	e7e3      	b.n	8000a54 <__smakebuf_r+0xc>
 8000a8c:	4b0d      	ldr	r3, [pc, #52]	; (8000ac4 <__smakebuf_r+0x7c>)
 8000a8e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a90:	89a3      	ldrh	r3, [r4, #12]
 8000a92:	6020      	str	r0, [r4, #0]
 8000a94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a98:	81a3      	strh	r3, [r4, #12]
 8000a9a:	9b00      	ldr	r3, [sp, #0]
 8000a9c:	6163      	str	r3, [r4, #20]
 8000a9e:	9b01      	ldr	r3, [sp, #4]
 8000aa0:	6120      	str	r0, [r4, #16]
 8000aa2:	b15b      	cbz	r3, 8000abc <__smakebuf_r+0x74>
 8000aa4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000aa8:	4630      	mov	r0, r6
 8000aaa:	f000 f93d 	bl	8000d28 <_isatty_r>
 8000aae:	b128      	cbz	r0, 8000abc <__smakebuf_r+0x74>
 8000ab0:	89a3      	ldrh	r3, [r4, #12]
 8000ab2:	f023 0303 	bic.w	r3, r3, #3
 8000ab6:	f043 0301 	orr.w	r3, r3, #1
 8000aba:	81a3      	strh	r3, [r4, #12]
 8000abc:	89a3      	ldrh	r3, [r4, #12]
 8000abe:	431d      	orrs	r5, r3
 8000ac0:	81a5      	strh	r5, [r4, #12]
 8000ac2:	e7cd      	b.n	8000a60 <__smakebuf_r+0x18>
 8000ac4:	080008b5 	.word	0x080008b5

08000ac8 <_free_r>:
 8000ac8:	b538      	push	{r3, r4, r5, lr}
 8000aca:	4605      	mov	r5, r0
 8000acc:	2900      	cmp	r1, #0
 8000ace:	d045      	beq.n	8000b5c <_free_r+0x94>
 8000ad0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ad4:	1f0c      	subs	r4, r1, #4
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	bfb8      	it	lt
 8000ada:	18e4      	addlt	r4, r4, r3
 8000adc:	f000 f946 	bl	8000d6c <__malloc_lock>
 8000ae0:	4a1f      	ldr	r2, [pc, #124]	; (8000b60 <_free_r+0x98>)
 8000ae2:	6813      	ldr	r3, [r2, #0]
 8000ae4:	4610      	mov	r0, r2
 8000ae6:	b933      	cbnz	r3, 8000af6 <_free_r+0x2e>
 8000ae8:	6063      	str	r3, [r4, #4]
 8000aea:	6014      	str	r4, [r2, #0]
 8000aec:	4628      	mov	r0, r5
 8000aee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000af2:	f000 b93c 	b.w	8000d6e <__malloc_unlock>
 8000af6:	42a3      	cmp	r3, r4
 8000af8:	d90c      	bls.n	8000b14 <_free_r+0x4c>
 8000afa:	6821      	ldr	r1, [r4, #0]
 8000afc:	1862      	adds	r2, r4, r1
 8000afe:	4293      	cmp	r3, r2
 8000b00:	bf04      	itt	eq
 8000b02:	681a      	ldreq	r2, [r3, #0]
 8000b04:	685b      	ldreq	r3, [r3, #4]
 8000b06:	6063      	str	r3, [r4, #4]
 8000b08:	bf04      	itt	eq
 8000b0a:	1852      	addeq	r2, r2, r1
 8000b0c:	6022      	streq	r2, [r4, #0]
 8000b0e:	6004      	str	r4, [r0, #0]
 8000b10:	e7ec      	b.n	8000aec <_free_r+0x24>
 8000b12:	4613      	mov	r3, r2
 8000b14:	685a      	ldr	r2, [r3, #4]
 8000b16:	b10a      	cbz	r2, 8000b1c <_free_r+0x54>
 8000b18:	42a2      	cmp	r2, r4
 8000b1a:	d9fa      	bls.n	8000b12 <_free_r+0x4a>
 8000b1c:	6819      	ldr	r1, [r3, #0]
 8000b1e:	1858      	adds	r0, r3, r1
 8000b20:	42a0      	cmp	r0, r4
 8000b22:	d10b      	bne.n	8000b3c <_free_r+0x74>
 8000b24:	6820      	ldr	r0, [r4, #0]
 8000b26:	4401      	add	r1, r0
 8000b28:	1858      	adds	r0, r3, r1
 8000b2a:	4282      	cmp	r2, r0
 8000b2c:	6019      	str	r1, [r3, #0]
 8000b2e:	d1dd      	bne.n	8000aec <_free_r+0x24>
 8000b30:	6810      	ldr	r0, [r2, #0]
 8000b32:	6852      	ldr	r2, [r2, #4]
 8000b34:	605a      	str	r2, [r3, #4]
 8000b36:	4401      	add	r1, r0
 8000b38:	6019      	str	r1, [r3, #0]
 8000b3a:	e7d7      	b.n	8000aec <_free_r+0x24>
 8000b3c:	d902      	bls.n	8000b44 <_free_r+0x7c>
 8000b3e:	230c      	movs	r3, #12
 8000b40:	602b      	str	r3, [r5, #0]
 8000b42:	e7d3      	b.n	8000aec <_free_r+0x24>
 8000b44:	6820      	ldr	r0, [r4, #0]
 8000b46:	1821      	adds	r1, r4, r0
 8000b48:	428a      	cmp	r2, r1
 8000b4a:	bf04      	itt	eq
 8000b4c:	6811      	ldreq	r1, [r2, #0]
 8000b4e:	6852      	ldreq	r2, [r2, #4]
 8000b50:	6062      	str	r2, [r4, #4]
 8000b52:	bf04      	itt	eq
 8000b54:	1809      	addeq	r1, r1, r0
 8000b56:	6021      	streq	r1, [r4, #0]
 8000b58:	605c      	str	r4, [r3, #4]
 8000b5a:	e7c7      	b.n	8000aec <_free_r+0x24>
 8000b5c:	bd38      	pop	{r3, r4, r5, pc}
 8000b5e:	bf00      	nop
 8000b60:	20000090 	.word	0x20000090

08000b64 <_malloc_r>:
 8000b64:	b570      	push	{r4, r5, r6, lr}
 8000b66:	1ccd      	adds	r5, r1, #3
 8000b68:	f025 0503 	bic.w	r5, r5, #3
 8000b6c:	3508      	adds	r5, #8
 8000b6e:	2d0c      	cmp	r5, #12
 8000b70:	bf38      	it	cc
 8000b72:	250c      	movcc	r5, #12
 8000b74:	2d00      	cmp	r5, #0
 8000b76:	4606      	mov	r6, r0
 8000b78:	db01      	blt.n	8000b7e <_malloc_r+0x1a>
 8000b7a:	42a9      	cmp	r1, r5
 8000b7c:	d903      	bls.n	8000b86 <_malloc_r+0x22>
 8000b7e:	230c      	movs	r3, #12
 8000b80:	6033      	str	r3, [r6, #0]
 8000b82:	2000      	movs	r0, #0
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	f000 f8f1 	bl	8000d6c <__malloc_lock>
 8000b8a:	4a21      	ldr	r2, [pc, #132]	; (8000c10 <_malloc_r+0xac>)
 8000b8c:	6814      	ldr	r4, [r2, #0]
 8000b8e:	4621      	mov	r1, r4
 8000b90:	b991      	cbnz	r1, 8000bb8 <_malloc_r+0x54>
 8000b92:	4c20      	ldr	r4, [pc, #128]	; (8000c14 <_malloc_r+0xb0>)
 8000b94:	6823      	ldr	r3, [r4, #0]
 8000b96:	b91b      	cbnz	r3, 8000ba0 <_malloc_r+0x3c>
 8000b98:	4630      	mov	r0, r6
 8000b9a:	f000 f83d 	bl	8000c18 <_sbrk_r>
 8000b9e:	6020      	str	r0, [r4, #0]
 8000ba0:	4629      	mov	r1, r5
 8000ba2:	4630      	mov	r0, r6
 8000ba4:	f000 f838 	bl	8000c18 <_sbrk_r>
 8000ba8:	1c43      	adds	r3, r0, #1
 8000baa:	d124      	bne.n	8000bf6 <_malloc_r+0x92>
 8000bac:	230c      	movs	r3, #12
 8000bae:	6033      	str	r3, [r6, #0]
 8000bb0:	4630      	mov	r0, r6
 8000bb2:	f000 f8dc 	bl	8000d6e <__malloc_unlock>
 8000bb6:	e7e4      	b.n	8000b82 <_malloc_r+0x1e>
 8000bb8:	680b      	ldr	r3, [r1, #0]
 8000bba:	1b5b      	subs	r3, r3, r5
 8000bbc:	d418      	bmi.n	8000bf0 <_malloc_r+0x8c>
 8000bbe:	2b0b      	cmp	r3, #11
 8000bc0:	d90f      	bls.n	8000be2 <_malloc_r+0x7e>
 8000bc2:	600b      	str	r3, [r1, #0]
 8000bc4:	50cd      	str	r5, [r1, r3]
 8000bc6:	18cc      	adds	r4, r1, r3
 8000bc8:	4630      	mov	r0, r6
 8000bca:	f000 f8d0 	bl	8000d6e <__malloc_unlock>
 8000bce:	f104 000b 	add.w	r0, r4, #11
 8000bd2:	1d23      	adds	r3, r4, #4
 8000bd4:	f020 0007 	bic.w	r0, r0, #7
 8000bd8:	1ac3      	subs	r3, r0, r3
 8000bda:	d0d3      	beq.n	8000b84 <_malloc_r+0x20>
 8000bdc:	425a      	negs	r2, r3
 8000bde:	50e2      	str	r2, [r4, r3]
 8000be0:	e7d0      	b.n	8000b84 <_malloc_r+0x20>
 8000be2:	428c      	cmp	r4, r1
 8000be4:	684b      	ldr	r3, [r1, #4]
 8000be6:	bf16      	itet	ne
 8000be8:	6063      	strne	r3, [r4, #4]
 8000bea:	6013      	streq	r3, [r2, #0]
 8000bec:	460c      	movne	r4, r1
 8000bee:	e7eb      	b.n	8000bc8 <_malloc_r+0x64>
 8000bf0:	460c      	mov	r4, r1
 8000bf2:	6849      	ldr	r1, [r1, #4]
 8000bf4:	e7cc      	b.n	8000b90 <_malloc_r+0x2c>
 8000bf6:	1cc4      	adds	r4, r0, #3
 8000bf8:	f024 0403 	bic.w	r4, r4, #3
 8000bfc:	42a0      	cmp	r0, r4
 8000bfe:	d005      	beq.n	8000c0c <_malloc_r+0xa8>
 8000c00:	1a21      	subs	r1, r4, r0
 8000c02:	4630      	mov	r0, r6
 8000c04:	f000 f808 	bl	8000c18 <_sbrk_r>
 8000c08:	3001      	adds	r0, #1
 8000c0a:	d0cf      	beq.n	8000bac <_malloc_r+0x48>
 8000c0c:	6025      	str	r5, [r4, #0]
 8000c0e:	e7db      	b.n	8000bc8 <_malloc_r+0x64>
 8000c10:	20000090 	.word	0x20000090
 8000c14:	20000094 	.word	0x20000094

08000c18 <_sbrk_r>:
 8000c18:	b538      	push	{r3, r4, r5, lr}
 8000c1a:	4c06      	ldr	r4, [pc, #24]	; (8000c34 <_sbrk_r+0x1c>)
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	4605      	mov	r5, r0
 8000c20:	4608      	mov	r0, r1
 8000c22:	6023      	str	r3, [r4, #0]
 8000c24:	f7ff fbc6 	bl	80003b4 <_sbrk>
 8000c28:	1c43      	adds	r3, r0, #1
 8000c2a:	d102      	bne.n	8000c32 <_sbrk_r+0x1a>
 8000c2c:	6823      	ldr	r3, [r4, #0]
 8000c2e:	b103      	cbz	r3, 8000c32 <_sbrk_r+0x1a>
 8000c30:	602b      	str	r3, [r5, #0]
 8000c32:	bd38      	pop	{r3, r4, r5, pc}
 8000c34:	20000098 	.word	0x20000098

08000c38 <__sread>:
 8000c38:	b510      	push	{r4, lr}
 8000c3a:	460c      	mov	r4, r1
 8000c3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c40:	f000 f896 	bl	8000d70 <_read_r>
 8000c44:	2800      	cmp	r0, #0
 8000c46:	bfab      	itete	ge
 8000c48:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c4a:	89a3      	ldrhlt	r3, [r4, #12]
 8000c4c:	181b      	addge	r3, r3, r0
 8000c4e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c52:	bfac      	ite	ge
 8000c54:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c56:	81a3      	strhlt	r3, [r4, #12]
 8000c58:	bd10      	pop	{r4, pc}

08000c5a <__swrite>:
 8000c5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c5e:	461f      	mov	r7, r3
 8000c60:	898b      	ldrh	r3, [r1, #12]
 8000c62:	05db      	lsls	r3, r3, #23
 8000c64:	4605      	mov	r5, r0
 8000c66:	460c      	mov	r4, r1
 8000c68:	4616      	mov	r6, r2
 8000c6a:	d505      	bpl.n	8000c78 <__swrite+0x1e>
 8000c6c:	2302      	movs	r3, #2
 8000c6e:	2200      	movs	r2, #0
 8000c70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c74:	f000 f868 	bl	8000d48 <_lseek_r>
 8000c78:	89a3      	ldrh	r3, [r4, #12]
 8000c7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c7e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c82:	81a3      	strh	r3, [r4, #12]
 8000c84:	4632      	mov	r2, r6
 8000c86:	463b      	mov	r3, r7
 8000c88:	4628      	mov	r0, r5
 8000c8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c8e:	f000 b817 	b.w	8000cc0 <_write_r>

08000c92 <__sseek>:
 8000c92:	b510      	push	{r4, lr}
 8000c94:	460c      	mov	r4, r1
 8000c96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c9a:	f000 f855 	bl	8000d48 <_lseek_r>
 8000c9e:	1c43      	adds	r3, r0, #1
 8000ca0:	89a3      	ldrh	r3, [r4, #12]
 8000ca2:	bf15      	itete	ne
 8000ca4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ca6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000caa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cae:	81a3      	strheq	r3, [r4, #12]
 8000cb0:	bf18      	it	ne
 8000cb2:	81a3      	strhne	r3, [r4, #12]
 8000cb4:	bd10      	pop	{r4, pc}

08000cb6 <__sclose>:
 8000cb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cba:	f000 b813 	b.w	8000ce4 <_close_r>
	...

08000cc0 <_write_r>:
 8000cc0:	b538      	push	{r3, r4, r5, lr}
 8000cc2:	4c07      	ldr	r4, [pc, #28]	; (8000ce0 <_write_r+0x20>)
 8000cc4:	4605      	mov	r5, r0
 8000cc6:	4608      	mov	r0, r1
 8000cc8:	4611      	mov	r1, r2
 8000cca:	2200      	movs	r2, #0
 8000ccc:	6022      	str	r2, [r4, #0]
 8000cce:	461a      	mov	r2, r3
 8000cd0:	f7ff fb1f 	bl	8000312 <_write>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d102      	bne.n	8000cde <_write_r+0x1e>
 8000cd8:	6823      	ldr	r3, [r4, #0]
 8000cda:	b103      	cbz	r3, 8000cde <_write_r+0x1e>
 8000cdc:	602b      	str	r3, [r5, #0]
 8000cde:	bd38      	pop	{r3, r4, r5, pc}
 8000ce0:	20000098 	.word	0x20000098

08000ce4 <_close_r>:
 8000ce4:	b538      	push	{r3, r4, r5, lr}
 8000ce6:	4c06      	ldr	r4, [pc, #24]	; (8000d00 <_close_r+0x1c>)
 8000ce8:	2300      	movs	r3, #0
 8000cea:	4605      	mov	r5, r0
 8000cec:	4608      	mov	r0, r1
 8000cee:	6023      	str	r3, [r4, #0]
 8000cf0:	f7ff fb2b 	bl	800034a <_close>
 8000cf4:	1c43      	adds	r3, r0, #1
 8000cf6:	d102      	bne.n	8000cfe <_close_r+0x1a>
 8000cf8:	6823      	ldr	r3, [r4, #0]
 8000cfa:	b103      	cbz	r3, 8000cfe <_close_r+0x1a>
 8000cfc:	602b      	str	r3, [r5, #0]
 8000cfe:	bd38      	pop	{r3, r4, r5, pc}
 8000d00:	20000098 	.word	0x20000098

08000d04 <_fstat_r>:
 8000d04:	b538      	push	{r3, r4, r5, lr}
 8000d06:	4c07      	ldr	r4, [pc, #28]	; (8000d24 <_fstat_r+0x20>)
 8000d08:	2300      	movs	r3, #0
 8000d0a:	4605      	mov	r5, r0
 8000d0c:	4608      	mov	r0, r1
 8000d0e:	4611      	mov	r1, r2
 8000d10:	6023      	str	r3, [r4, #0]
 8000d12:	f7ff fb26 	bl	8000362 <_fstat>
 8000d16:	1c43      	adds	r3, r0, #1
 8000d18:	d102      	bne.n	8000d20 <_fstat_r+0x1c>
 8000d1a:	6823      	ldr	r3, [r4, #0]
 8000d1c:	b103      	cbz	r3, 8000d20 <_fstat_r+0x1c>
 8000d1e:	602b      	str	r3, [r5, #0]
 8000d20:	bd38      	pop	{r3, r4, r5, pc}
 8000d22:	bf00      	nop
 8000d24:	20000098 	.word	0x20000098

08000d28 <_isatty_r>:
 8000d28:	b538      	push	{r3, r4, r5, lr}
 8000d2a:	4c06      	ldr	r4, [pc, #24]	; (8000d44 <_isatty_r+0x1c>)
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	4605      	mov	r5, r0
 8000d30:	4608      	mov	r0, r1
 8000d32:	6023      	str	r3, [r4, #0]
 8000d34:	f7ff fb25 	bl	8000382 <_isatty>
 8000d38:	1c43      	adds	r3, r0, #1
 8000d3a:	d102      	bne.n	8000d42 <_isatty_r+0x1a>
 8000d3c:	6823      	ldr	r3, [r4, #0]
 8000d3e:	b103      	cbz	r3, 8000d42 <_isatty_r+0x1a>
 8000d40:	602b      	str	r3, [r5, #0]
 8000d42:	bd38      	pop	{r3, r4, r5, pc}
 8000d44:	20000098 	.word	0x20000098

08000d48 <_lseek_r>:
 8000d48:	b538      	push	{r3, r4, r5, lr}
 8000d4a:	4c07      	ldr	r4, [pc, #28]	; (8000d68 <_lseek_r+0x20>)
 8000d4c:	4605      	mov	r5, r0
 8000d4e:	4608      	mov	r0, r1
 8000d50:	4611      	mov	r1, r2
 8000d52:	2200      	movs	r2, #0
 8000d54:	6022      	str	r2, [r4, #0]
 8000d56:	461a      	mov	r2, r3
 8000d58:	f7ff fb1e 	bl	8000398 <_lseek>
 8000d5c:	1c43      	adds	r3, r0, #1
 8000d5e:	d102      	bne.n	8000d66 <_lseek_r+0x1e>
 8000d60:	6823      	ldr	r3, [r4, #0]
 8000d62:	b103      	cbz	r3, 8000d66 <_lseek_r+0x1e>
 8000d64:	602b      	str	r3, [r5, #0]
 8000d66:	bd38      	pop	{r3, r4, r5, pc}
 8000d68:	20000098 	.word	0x20000098

08000d6c <__malloc_lock>:
 8000d6c:	4770      	bx	lr

08000d6e <__malloc_unlock>:
 8000d6e:	4770      	bx	lr

08000d70 <_read_r>:
 8000d70:	b538      	push	{r3, r4, r5, lr}
 8000d72:	4c07      	ldr	r4, [pc, #28]	; (8000d90 <_read_r+0x20>)
 8000d74:	4605      	mov	r5, r0
 8000d76:	4608      	mov	r0, r1
 8000d78:	4611      	mov	r1, r2
 8000d7a:	2200      	movs	r2, #0
 8000d7c:	6022      	str	r2, [r4, #0]
 8000d7e:	461a      	mov	r2, r3
 8000d80:	f7ff faaa 	bl	80002d8 <_read>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	d102      	bne.n	8000d8e <_read_r+0x1e>
 8000d88:	6823      	ldr	r3, [r4, #0]
 8000d8a:	b103      	cbz	r3, 8000d8e <_read_r+0x1e>
 8000d8c:	602b      	str	r3, [r5, #0]
 8000d8e:	bd38      	pop	{r3, r4, r5, pc}
 8000d90:	20000098 	.word	0x20000098

08000d94 <_init>:
 8000d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d96:	bf00      	nop
 8000d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d9a:	bc08      	pop	{r3}
 8000d9c:	469e      	mov	lr, r3
 8000d9e:	4770      	bx	lr

08000da0 <_fini>:
 8000da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da2:	bf00      	nop
 8000da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000da6:	bc08      	pop	{r3}
 8000da8:	469e      	mov	lr, r3
 8000daa:	4770      	bx	lr
