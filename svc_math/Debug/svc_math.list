
svc_math.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000144c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f0  080015fc  080015fc  000115fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016ec  080016ec  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016ec  080016ec  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016ec  080016ec  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016ec  080016ec  000116ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016f0  080016f0  000116f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b57  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003ce  00000000  00000000  00020beb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  00020fc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000110  00000000  00000000  00021108  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bf2  00000000  00000000  00021218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000013ca  00000000  00000000  00023e0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000093df  00000000  00000000  000251d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e5b3  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c70  00000000  00000000  0002e604  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080015e4 	.word	0x080015e4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080015e4 	.word	0x080015e4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <div_numbers>:
	__asm volatile("MOV %0,R0": "=r"(res) ::);
	return res;
}

int32_t div_numbers(int32_t x , int32_t y )
{
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile("SVC #39");
 800029a:	df27      	svc	39	; 0x27
	__asm volatile("MOV %0,R0": "=r"(res) ::);
 800029c:	4603      	mov	r3, r0
 800029e:	60fb      	str	r3, [r7, #12]
	return res;
 80002a0:	68fb      	ldr	r3, [r7, #12]
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3714      	adds	r7, #20
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr
	...

080002b0 <main>:


int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
//    printf("Sub result = %ld\n", res);
//
//    res = mul_numbers(374, 890);
//    printf("mul result = %ld\n", res);

    res = div_numbers(67, -3);
 80002b6:	f06f 0102 	mvn.w	r1, #2
 80002ba:	2043      	movs	r0, #67	; 0x43
 80002bc:	f7ff ffe8 	bl	8000290 <div_numbers>
 80002c0:	6078      	str	r0, [r7, #4]
    printf("div result = %ld\n", res);
 80002c2:	6879      	ldr	r1, [r7, #4]
 80002c4:	4801      	ldr	r0, [pc, #4]	; (80002cc <main+0x1c>)
 80002c6:	f000 f989 	bl	80005dc <iprintf>

//    res = 67/(-3);
//    printf("test = %ld\n", res);
    for(;;);
 80002ca:	e7fe      	b.n	80002ca <main+0x1a>
 80002cc:	080015fc 	.word	0x080015fc

080002d0 <SVC_Handler>:
}


__attribute__( ( naked ) ) void SVC_Handler( void )
{
    __asm ("MRS r0,MSP");
 80002d0:	f3ef 8008 	mrs	r0, MSP
    __asm( "B SVC_Handler_c");
 80002d4:	f000 b802 	b.w	80002dc <SVC_Handler_c>
}
 80002d8:	bf00      	nop
	...

080002dc <SVC_Handler_c>:


void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	b088      	sub	sp, #32
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
    printf("in SVC handler\n");
 80002e4:	4825      	ldr	r0, [pc, #148]	; (800037c <SVC_Handler_c+0xa0>)
 80002e6:	f000 f9ff 	bl	80006e8 <puts>
    uint32_t x, y, res;

    uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	3318      	adds	r3, #24
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	61bb      	str	r3, [r7, #24]

    //2. decrement the return address by 2 to point to
    //opcode of the SVC instruction in the program memory
    pReturn_addr-=2;
 80002f2:	69bb      	ldr	r3, [r7, #24]
 80002f4:	3b02      	subs	r3, #2
 80002f6:	61bb      	str	r3, [r7, #24]

    //3. extract the SVC number (LSByte of the opcode)
    uint8_t svc_number = *pReturn_addr;
 80002f8:	69bb      	ldr	r3, [r7, #24]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	75fb      	strb	r3, [r7, #23]

    printf("Svc number is : %d\n",svc_number);
 80002fe:	7dfb      	ldrb	r3, [r7, #23]
 8000300:	4619      	mov	r1, r3
 8000302:	481f      	ldr	r0, [pc, #124]	; (8000380 <SVC_Handler_c+0xa4>)
 8000304:	f000 f96a 	bl	80005dc <iprintf>

/*SVC number signifies the type of operation , decode it */
    x = pBaseOfStackFrame[0];//r0
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	613b      	str	r3, [r7, #16]
    y = pBaseOfStackFrame[1];//r1
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	685b      	ldr	r3, [r3, #4]
 8000312:	60fb      	str	r3, [r7, #12]
    switch(svc_number)
 8000314:	7dfb      	ldrb	r3, [r7, #23]
 8000316:	3b24      	subs	r3, #36	; 0x24
 8000318:	2b03      	cmp	r3, #3
 800031a:	d821      	bhi.n	8000360 <SVC_Handler_c+0x84>
 800031c:	a201      	add	r2, pc, #4	; (adr r2, 8000324 <SVC_Handler_c+0x48>)
 800031e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000322:	bf00      	nop
 8000324:	08000335 	.word	0x08000335
 8000328:	0800033f 	.word	0x0800033f
 800032c:	08000349 	.word	0x08000349
 8000330:	08000355 	.word	0x08000355
    {
    case 36:
    	res = x + y;
 8000334:	693a      	ldr	r2, [r7, #16]
 8000336:	68fb      	ldr	r3, [r7, #12]
 8000338:	4413      	add	r3, r2
 800033a:	61fb      	str	r3, [r7, #28]
        break;
 800033c:	e013      	b.n	8000366 <SVC_Handler_c+0x8a>
    case 37:
    	res = x - y;
 800033e:	693a      	ldr	r2, [r7, #16]
 8000340:	68fb      	ldr	r3, [r7, #12]
 8000342:	1ad3      	subs	r3, r2, r3
 8000344:	61fb      	str	r3, [r7, #28]
        break;
 8000346:	e00e      	b.n	8000366 <SVC_Handler_c+0x8a>
    case 38:
    	res = x * y;
 8000348:	693b      	ldr	r3, [r7, #16]
 800034a:	68fa      	ldr	r2, [r7, #12]
 800034c:	fb02 f303 	mul.w	r3, r2, r3
 8000350:	61fb      	str	r3, [r7, #28]
        break;
 8000352:	e008      	b.n	8000366 <SVC_Handler_c+0x8a>
    case 39:
    	res = x/y;
 8000354:	693a      	ldr	r2, [r7, #16]
 8000356:	68fb      	ldr	r3, [r7, #12]
 8000358:	fbb2 f3f3 	udiv	r3, r2, r3
 800035c:	61fb      	str	r3, [r7, #28]
        break;
 800035e:	e002      	b.n	8000366 <SVC_Handler_c+0x8a>
    default:
        printf("invalid svc code\n");
 8000360:	4808      	ldr	r0, [pc, #32]	; (8000384 <SVC_Handler_c+0xa8>)
 8000362:	f000 f9c1 	bl	80006e8 <puts>

    }
    printf("res = %ld\n", res);
 8000366:	69f9      	ldr	r1, [r7, #28]
 8000368:	4807      	ldr	r0, [pc, #28]	; (8000388 <SVC_Handler_c+0xac>)
 800036a:	f000 f937 	bl	80005dc <iprintf>

/*store the result back to stack frame at R0's position */
    pBaseOfStackFrame[0] = res;
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	69fa      	ldr	r2, [r7, #28]
 8000372:	601a      	str	r2, [r3, #0]

}
 8000374:	bf00      	nop
 8000376:	3720      	adds	r7, #32
 8000378:	46bd      	mov	sp, r7
 800037a:	bd80      	pop	{r7, pc}
 800037c:	08001610 	.word	0x08001610
 8000380:	08001620 	.word	0x08001620
 8000384:	08001634 	.word	0x08001634
 8000388:	08001648 	.word	0x08001648

0800038c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800038c:	b480      	push	{r7}
 800038e:	b083      	sub	sp, #12
 8000390:	af00      	add	r7, sp, #0
 8000392:	4603      	mov	r3, r0
 8000394:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000396:	4b0f      	ldr	r3, [pc, #60]	; (80003d4 <ITM_SendChar+0x48>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a0e      	ldr	r2, [pc, #56]	; (80003d4 <ITM_SendChar+0x48>)
 800039c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003a0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003a2:	4b0d      	ldr	r3, [pc, #52]	; (80003d8 <ITM_SendChar+0x4c>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4a0c      	ldr	r2, [pc, #48]	; (80003d8 <ITM_SendChar+0x4c>)
 80003a8:	f043 0301 	orr.w	r3, r3, #1
 80003ac:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ae:	bf00      	nop
 80003b0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	f003 0301 	and.w	r3, r3, #1
 80003ba:	2b00      	cmp	r3, #0
 80003bc:	d0f8      	beq.n	80003b0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003be:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003c2:	79fb      	ldrb	r3, [r7, #7]
 80003c4:	6013      	str	r3, [r2, #0]
}
 80003c6:	bf00      	nop
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d0:	4770      	bx	lr
 80003d2:	bf00      	nop
 80003d4:	e000edfc 	.word	0xe000edfc
 80003d8:	e0000e00 	.word	0xe0000e00

080003dc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	b086      	sub	sp, #24
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	60f8      	str	r0, [r7, #12]
 80003e4:	60b9      	str	r1, [r7, #8]
 80003e6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e8:	2300      	movs	r3, #0
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	e00a      	b.n	8000404 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003ee:	f3af 8000 	nop.w
 80003f2:	4601      	mov	r1, r0
 80003f4:	68bb      	ldr	r3, [r7, #8]
 80003f6:	1c5a      	adds	r2, r3, #1
 80003f8:	60ba      	str	r2, [r7, #8]
 80003fa:	b2ca      	uxtb	r2, r1
 80003fc:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3301      	adds	r3, #1
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	697a      	ldr	r2, [r7, #20]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	429a      	cmp	r2, r3
 800040a:	dbf0      	blt.n	80003ee <_read+0x12>
	}

return len;
 800040c:	687b      	ldr	r3, [r7, #4]
}
 800040e:	4618      	mov	r0, r3
 8000410:	3718      	adds	r7, #24
 8000412:	46bd      	mov	sp, r7
 8000414:	bd80      	pop	{r7, pc}

08000416 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000416:	b580      	push	{r7, lr}
 8000418:	b086      	sub	sp, #24
 800041a:	af00      	add	r7, sp, #0
 800041c:	60f8      	str	r0, [r7, #12]
 800041e:	60b9      	str	r1, [r7, #8]
 8000420:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000422:	2300      	movs	r3, #0
 8000424:	617b      	str	r3, [r7, #20]
 8000426:	e009      	b.n	800043c <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000428:	68bb      	ldr	r3, [r7, #8]
 800042a:	1c5a      	adds	r2, r3, #1
 800042c:	60ba      	str	r2, [r7, #8]
 800042e:	781b      	ldrb	r3, [r3, #0]
 8000430:	4618      	mov	r0, r3
 8000432:	f7ff ffab 	bl	800038c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697a      	ldr	r2, [r7, #20]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbf1      	blt.n	8000428 <_write+0x12>
	}
	return len;
 8000444:	687b      	ldr	r3, [r7, #4]
}
 8000446:	4618      	mov	r0, r3
 8000448:	3718      	adds	r7, #24
 800044a:	46bd      	mov	sp, r7
 800044c:	bd80      	pop	{r7, pc}

0800044e <_close>:

int _close(int file)
{
 800044e:	b480      	push	{r7}
 8000450:	b083      	sub	sp, #12
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
	return -1;
 8000456:	f04f 33ff 	mov.w	r3, #4294967295
}
 800045a:	4618      	mov	r0, r3
 800045c:	370c      	adds	r7, #12
 800045e:	46bd      	mov	sp, r7
 8000460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000464:	4770      	bx	lr

08000466 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000466:	b480      	push	{r7}
 8000468:	b083      	sub	sp, #12
 800046a:	af00      	add	r7, sp, #0
 800046c:	6078      	str	r0, [r7, #4]
 800046e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000470:	683b      	ldr	r3, [r7, #0]
 8000472:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000476:	605a      	str	r2, [r3, #4]
	return 0;
 8000478:	2300      	movs	r3, #0
}
 800047a:	4618      	mov	r0, r3
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000484:	4770      	bx	lr

08000486 <_isatty>:

int _isatty(int file)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
	return 1;
 800048e:	2301      	movs	r3, #1
}
 8000490:	4618      	mov	r0, r3
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr

0800049c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800049c:	b480      	push	{r7}
 800049e:	b085      	sub	sp, #20
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	60f8      	str	r0, [r7, #12]
 80004a4:	60b9      	str	r1, [r7, #8]
 80004a6:	607a      	str	r2, [r7, #4]
	return 0;
 80004a8:	2300      	movs	r3, #0
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	3714      	adds	r7, #20
 80004ae:	46bd      	mov	sp, r7
 80004b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b4:	4770      	bx	lr
	...

080004b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004b8:	b580      	push	{r7, lr}
 80004ba:	b086      	sub	sp, #24
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004c0:	4a14      	ldr	r2, [pc, #80]	; (8000514 <_sbrk+0x5c>)
 80004c2:	4b15      	ldr	r3, [pc, #84]	; (8000518 <_sbrk+0x60>)
 80004c4:	1ad3      	subs	r3, r2, r3
 80004c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004c8:	697b      	ldr	r3, [r7, #20]
 80004ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004cc:	4b13      	ldr	r3, [pc, #76]	; (800051c <_sbrk+0x64>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	d102      	bne.n	80004da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004d4:	4b11      	ldr	r3, [pc, #68]	; (800051c <_sbrk+0x64>)
 80004d6:	4a12      	ldr	r2, [pc, #72]	; (8000520 <_sbrk+0x68>)
 80004d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004da:	4b10      	ldr	r3, [pc, #64]	; (800051c <_sbrk+0x64>)
 80004dc:	681a      	ldr	r2, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	4413      	add	r3, r2
 80004e2:	693a      	ldr	r2, [r7, #16]
 80004e4:	429a      	cmp	r2, r3
 80004e6:	d207      	bcs.n	80004f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004e8:	f000 f846 	bl	8000578 <__errno>
 80004ec:	4603      	mov	r3, r0
 80004ee:	220c      	movs	r2, #12
 80004f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004f2:	f04f 33ff 	mov.w	r3, #4294967295
 80004f6:	e009      	b.n	800050c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004f8:	4b08      	ldr	r3, [pc, #32]	; (800051c <_sbrk+0x64>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004fe:	4b07      	ldr	r3, [pc, #28]	; (800051c <_sbrk+0x64>)
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4413      	add	r3, r2
 8000506:	4a05      	ldr	r2, [pc, #20]	; (800051c <_sbrk+0x64>)
 8000508:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800050a:	68fb      	ldr	r3, [r7, #12]
}
 800050c:	4618      	mov	r0, r3
 800050e:	3718      	adds	r7, #24
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}
 8000514:	20020000 	.word	0x20020000
 8000518:	00000400 	.word	0x00000400
 800051c:	20000080 	.word	0x20000080
 8000520:	20000098 	.word	0x20000098

08000524 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000524:	480d      	ldr	r0, [pc, #52]	; (800055c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000526:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000528:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800052c:	480c      	ldr	r0, [pc, #48]	; (8000560 <LoopForever+0x6>)
  ldr r1, =_edata
 800052e:	490d      	ldr	r1, [pc, #52]	; (8000564 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000530:	4a0d      	ldr	r2, [pc, #52]	; (8000568 <LoopForever+0xe>)
  movs r3, #0
 8000532:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000534:	e002      	b.n	800053c <LoopCopyDataInit>

08000536 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000536:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000538:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800053a:	3304      	adds	r3, #4

0800053c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800053c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800053e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000540:	d3f9      	bcc.n	8000536 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000542:	4a0a      	ldr	r2, [pc, #40]	; (800056c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000544:	4c0a      	ldr	r4, [pc, #40]	; (8000570 <LoopForever+0x16>)
  movs r3, #0
 8000546:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000548:	e001      	b.n	800054e <LoopFillZerobss>

0800054a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800054a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800054c:	3204      	adds	r2, #4

0800054e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800054e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000550:	d3fb      	bcc.n	800054a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000552:	f000 f817 	bl	8000584 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000556:	f7ff feab 	bl	80002b0 <main>

0800055a <LoopForever>:

LoopForever:
    b LoopForever
 800055a:	e7fe      	b.n	800055a <LoopForever>
  ldr   r0, =_estack
 800055c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000560:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000564:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000568:	080016f4 	.word	0x080016f4
  ldr r2, =_sbss
 800056c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000570:	20000094 	.word	0x20000094

08000574 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000574:	e7fe      	b.n	8000574 <ADC_IRQHandler>
	...

08000578 <__errno>:
 8000578:	4b01      	ldr	r3, [pc, #4]	; (8000580 <__errno+0x8>)
 800057a:	6818      	ldr	r0, [r3, #0]
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop
 8000580:	20000000 	.word	0x20000000

08000584 <__libc_init_array>:
 8000584:	b570      	push	{r4, r5, r6, lr}
 8000586:	4d0d      	ldr	r5, [pc, #52]	; (80005bc <__libc_init_array+0x38>)
 8000588:	4c0d      	ldr	r4, [pc, #52]	; (80005c0 <__libc_init_array+0x3c>)
 800058a:	1b64      	subs	r4, r4, r5
 800058c:	10a4      	asrs	r4, r4, #2
 800058e:	2600      	movs	r6, #0
 8000590:	42a6      	cmp	r6, r4
 8000592:	d109      	bne.n	80005a8 <__libc_init_array+0x24>
 8000594:	4d0b      	ldr	r5, [pc, #44]	; (80005c4 <__libc_init_array+0x40>)
 8000596:	4c0c      	ldr	r4, [pc, #48]	; (80005c8 <__libc_init_array+0x44>)
 8000598:	f001 f824 	bl	80015e4 <_init>
 800059c:	1b64      	subs	r4, r4, r5
 800059e:	10a4      	asrs	r4, r4, #2
 80005a0:	2600      	movs	r6, #0
 80005a2:	42a6      	cmp	r6, r4
 80005a4:	d105      	bne.n	80005b2 <__libc_init_array+0x2e>
 80005a6:	bd70      	pop	{r4, r5, r6, pc}
 80005a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ac:	4798      	blx	r3
 80005ae:	3601      	adds	r6, #1
 80005b0:	e7ee      	b.n	8000590 <__libc_init_array+0xc>
 80005b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005b6:	4798      	blx	r3
 80005b8:	3601      	adds	r6, #1
 80005ba:	e7f2      	b.n	80005a2 <__libc_init_array+0x1e>
 80005bc:	080016ec 	.word	0x080016ec
 80005c0:	080016ec 	.word	0x080016ec
 80005c4:	080016ec 	.word	0x080016ec
 80005c8:	080016f0 	.word	0x080016f0

080005cc <memset>:
 80005cc:	4402      	add	r2, r0
 80005ce:	4603      	mov	r3, r0
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d100      	bne.n	80005d6 <memset+0xa>
 80005d4:	4770      	bx	lr
 80005d6:	f803 1b01 	strb.w	r1, [r3], #1
 80005da:	e7f9      	b.n	80005d0 <memset+0x4>

080005dc <iprintf>:
 80005dc:	b40f      	push	{r0, r1, r2, r3}
 80005de:	4b0a      	ldr	r3, [pc, #40]	; (8000608 <iprintf+0x2c>)
 80005e0:	b513      	push	{r0, r1, r4, lr}
 80005e2:	681c      	ldr	r4, [r3, #0]
 80005e4:	b124      	cbz	r4, 80005f0 <iprintf+0x14>
 80005e6:	69a3      	ldr	r3, [r4, #24]
 80005e8:	b913      	cbnz	r3, 80005f0 <iprintf+0x14>
 80005ea:	4620      	mov	r0, r4
 80005ec:	f000 fa5e 	bl	8000aac <__sinit>
 80005f0:	ab05      	add	r3, sp, #20
 80005f2:	9a04      	ldr	r2, [sp, #16]
 80005f4:	68a1      	ldr	r1, [r4, #8]
 80005f6:	9301      	str	r3, [sp, #4]
 80005f8:	4620      	mov	r0, r4
 80005fa:	f000 fc67 	bl	8000ecc <_vfiprintf_r>
 80005fe:	b002      	add	sp, #8
 8000600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000604:	b004      	add	sp, #16
 8000606:	4770      	bx	lr
 8000608:	20000000 	.word	0x20000000

0800060c <_puts_r>:
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	460e      	mov	r6, r1
 8000610:	4605      	mov	r5, r0
 8000612:	b118      	cbz	r0, 800061c <_puts_r+0x10>
 8000614:	6983      	ldr	r3, [r0, #24]
 8000616:	b90b      	cbnz	r3, 800061c <_puts_r+0x10>
 8000618:	f000 fa48 	bl	8000aac <__sinit>
 800061c:	69ab      	ldr	r3, [r5, #24]
 800061e:	68ac      	ldr	r4, [r5, #8]
 8000620:	b913      	cbnz	r3, 8000628 <_puts_r+0x1c>
 8000622:	4628      	mov	r0, r5
 8000624:	f000 fa42 	bl	8000aac <__sinit>
 8000628:	4b2c      	ldr	r3, [pc, #176]	; (80006dc <_puts_r+0xd0>)
 800062a:	429c      	cmp	r4, r3
 800062c:	d120      	bne.n	8000670 <_puts_r+0x64>
 800062e:	686c      	ldr	r4, [r5, #4]
 8000630:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000632:	07db      	lsls	r3, r3, #31
 8000634:	d405      	bmi.n	8000642 <_puts_r+0x36>
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	0598      	lsls	r0, r3, #22
 800063a:	d402      	bmi.n	8000642 <_puts_r+0x36>
 800063c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800063e:	f000 fad3 	bl	8000be8 <__retarget_lock_acquire_recursive>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	0719      	lsls	r1, r3, #28
 8000646:	d51d      	bpl.n	8000684 <_puts_r+0x78>
 8000648:	6923      	ldr	r3, [r4, #16]
 800064a:	b1db      	cbz	r3, 8000684 <_puts_r+0x78>
 800064c:	3e01      	subs	r6, #1
 800064e:	68a3      	ldr	r3, [r4, #8]
 8000650:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000654:	3b01      	subs	r3, #1
 8000656:	60a3      	str	r3, [r4, #8]
 8000658:	bb39      	cbnz	r1, 80006aa <_puts_r+0x9e>
 800065a:	2b00      	cmp	r3, #0
 800065c:	da38      	bge.n	80006d0 <_puts_r+0xc4>
 800065e:	4622      	mov	r2, r4
 8000660:	210a      	movs	r1, #10
 8000662:	4628      	mov	r0, r5
 8000664:	f000 f848 	bl	80006f8 <__swbuf_r>
 8000668:	3001      	adds	r0, #1
 800066a:	d011      	beq.n	8000690 <_puts_r+0x84>
 800066c:	250a      	movs	r5, #10
 800066e:	e011      	b.n	8000694 <_puts_r+0x88>
 8000670:	4b1b      	ldr	r3, [pc, #108]	; (80006e0 <_puts_r+0xd4>)
 8000672:	429c      	cmp	r4, r3
 8000674:	d101      	bne.n	800067a <_puts_r+0x6e>
 8000676:	68ac      	ldr	r4, [r5, #8]
 8000678:	e7da      	b.n	8000630 <_puts_r+0x24>
 800067a:	4b1a      	ldr	r3, [pc, #104]	; (80006e4 <_puts_r+0xd8>)
 800067c:	429c      	cmp	r4, r3
 800067e:	bf08      	it	eq
 8000680:	68ec      	ldreq	r4, [r5, #12]
 8000682:	e7d5      	b.n	8000630 <_puts_r+0x24>
 8000684:	4621      	mov	r1, r4
 8000686:	4628      	mov	r0, r5
 8000688:	f000 f888 	bl	800079c <__swsetup_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	d0dd      	beq.n	800064c <_puts_r+0x40>
 8000690:	f04f 35ff 	mov.w	r5, #4294967295
 8000694:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000696:	07da      	lsls	r2, r3, #31
 8000698:	d405      	bmi.n	80006a6 <_puts_r+0x9a>
 800069a:	89a3      	ldrh	r3, [r4, #12]
 800069c:	059b      	lsls	r3, r3, #22
 800069e:	d402      	bmi.n	80006a6 <_puts_r+0x9a>
 80006a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006a2:	f000 faa2 	bl	8000bea <__retarget_lock_release_recursive>
 80006a6:	4628      	mov	r0, r5
 80006a8:	bd70      	pop	{r4, r5, r6, pc}
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	da04      	bge.n	80006b8 <_puts_r+0xac>
 80006ae:	69a2      	ldr	r2, [r4, #24]
 80006b0:	429a      	cmp	r2, r3
 80006b2:	dc06      	bgt.n	80006c2 <_puts_r+0xb6>
 80006b4:	290a      	cmp	r1, #10
 80006b6:	d004      	beq.n	80006c2 <_puts_r+0xb6>
 80006b8:	6823      	ldr	r3, [r4, #0]
 80006ba:	1c5a      	adds	r2, r3, #1
 80006bc:	6022      	str	r2, [r4, #0]
 80006be:	7019      	strb	r1, [r3, #0]
 80006c0:	e7c5      	b.n	800064e <_puts_r+0x42>
 80006c2:	4622      	mov	r2, r4
 80006c4:	4628      	mov	r0, r5
 80006c6:	f000 f817 	bl	80006f8 <__swbuf_r>
 80006ca:	3001      	adds	r0, #1
 80006cc:	d1bf      	bne.n	800064e <_puts_r+0x42>
 80006ce:	e7df      	b.n	8000690 <_puts_r+0x84>
 80006d0:	6823      	ldr	r3, [r4, #0]
 80006d2:	250a      	movs	r5, #10
 80006d4:	1c5a      	adds	r2, r3, #1
 80006d6:	6022      	str	r2, [r4, #0]
 80006d8:	701d      	strb	r5, [r3, #0]
 80006da:	e7db      	b.n	8000694 <_puts_r+0x88>
 80006dc:	08001678 	.word	0x08001678
 80006e0:	08001698 	.word	0x08001698
 80006e4:	08001658 	.word	0x08001658

080006e8 <puts>:
 80006e8:	4b02      	ldr	r3, [pc, #8]	; (80006f4 <puts+0xc>)
 80006ea:	4601      	mov	r1, r0
 80006ec:	6818      	ldr	r0, [r3, #0]
 80006ee:	f7ff bf8d 	b.w	800060c <_puts_r>
 80006f2:	bf00      	nop
 80006f4:	20000000 	.word	0x20000000

080006f8 <__swbuf_r>:
 80006f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fa:	460e      	mov	r6, r1
 80006fc:	4614      	mov	r4, r2
 80006fe:	4605      	mov	r5, r0
 8000700:	b118      	cbz	r0, 800070a <__swbuf_r+0x12>
 8000702:	6983      	ldr	r3, [r0, #24]
 8000704:	b90b      	cbnz	r3, 800070a <__swbuf_r+0x12>
 8000706:	f000 f9d1 	bl	8000aac <__sinit>
 800070a:	4b21      	ldr	r3, [pc, #132]	; (8000790 <__swbuf_r+0x98>)
 800070c:	429c      	cmp	r4, r3
 800070e:	d12b      	bne.n	8000768 <__swbuf_r+0x70>
 8000710:	686c      	ldr	r4, [r5, #4]
 8000712:	69a3      	ldr	r3, [r4, #24]
 8000714:	60a3      	str	r3, [r4, #8]
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	071a      	lsls	r2, r3, #28
 800071a:	d52f      	bpl.n	800077c <__swbuf_r+0x84>
 800071c:	6923      	ldr	r3, [r4, #16]
 800071e:	b36b      	cbz	r3, 800077c <__swbuf_r+0x84>
 8000720:	6923      	ldr	r3, [r4, #16]
 8000722:	6820      	ldr	r0, [r4, #0]
 8000724:	1ac0      	subs	r0, r0, r3
 8000726:	6963      	ldr	r3, [r4, #20]
 8000728:	b2f6      	uxtb	r6, r6
 800072a:	4283      	cmp	r3, r0
 800072c:	4637      	mov	r7, r6
 800072e:	dc04      	bgt.n	800073a <__swbuf_r+0x42>
 8000730:	4621      	mov	r1, r4
 8000732:	4628      	mov	r0, r5
 8000734:	f000 f926 	bl	8000984 <_fflush_r>
 8000738:	bb30      	cbnz	r0, 8000788 <__swbuf_r+0x90>
 800073a:	68a3      	ldr	r3, [r4, #8]
 800073c:	3b01      	subs	r3, #1
 800073e:	60a3      	str	r3, [r4, #8]
 8000740:	6823      	ldr	r3, [r4, #0]
 8000742:	1c5a      	adds	r2, r3, #1
 8000744:	6022      	str	r2, [r4, #0]
 8000746:	701e      	strb	r6, [r3, #0]
 8000748:	6963      	ldr	r3, [r4, #20]
 800074a:	3001      	adds	r0, #1
 800074c:	4283      	cmp	r3, r0
 800074e:	d004      	beq.n	800075a <__swbuf_r+0x62>
 8000750:	89a3      	ldrh	r3, [r4, #12]
 8000752:	07db      	lsls	r3, r3, #31
 8000754:	d506      	bpl.n	8000764 <__swbuf_r+0x6c>
 8000756:	2e0a      	cmp	r6, #10
 8000758:	d104      	bne.n	8000764 <__swbuf_r+0x6c>
 800075a:	4621      	mov	r1, r4
 800075c:	4628      	mov	r0, r5
 800075e:	f000 f911 	bl	8000984 <_fflush_r>
 8000762:	b988      	cbnz	r0, 8000788 <__swbuf_r+0x90>
 8000764:	4638      	mov	r0, r7
 8000766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000768:	4b0a      	ldr	r3, [pc, #40]	; (8000794 <__swbuf_r+0x9c>)
 800076a:	429c      	cmp	r4, r3
 800076c:	d101      	bne.n	8000772 <__swbuf_r+0x7a>
 800076e:	68ac      	ldr	r4, [r5, #8]
 8000770:	e7cf      	b.n	8000712 <__swbuf_r+0x1a>
 8000772:	4b09      	ldr	r3, [pc, #36]	; (8000798 <__swbuf_r+0xa0>)
 8000774:	429c      	cmp	r4, r3
 8000776:	bf08      	it	eq
 8000778:	68ec      	ldreq	r4, [r5, #12]
 800077a:	e7ca      	b.n	8000712 <__swbuf_r+0x1a>
 800077c:	4621      	mov	r1, r4
 800077e:	4628      	mov	r0, r5
 8000780:	f000 f80c 	bl	800079c <__swsetup_r>
 8000784:	2800      	cmp	r0, #0
 8000786:	d0cb      	beq.n	8000720 <__swbuf_r+0x28>
 8000788:	f04f 37ff 	mov.w	r7, #4294967295
 800078c:	e7ea      	b.n	8000764 <__swbuf_r+0x6c>
 800078e:	bf00      	nop
 8000790:	08001678 	.word	0x08001678
 8000794:	08001698 	.word	0x08001698
 8000798:	08001658 	.word	0x08001658

0800079c <__swsetup_r>:
 800079c:	4b32      	ldr	r3, [pc, #200]	; (8000868 <__swsetup_r+0xcc>)
 800079e:	b570      	push	{r4, r5, r6, lr}
 80007a0:	681d      	ldr	r5, [r3, #0]
 80007a2:	4606      	mov	r6, r0
 80007a4:	460c      	mov	r4, r1
 80007a6:	b125      	cbz	r5, 80007b2 <__swsetup_r+0x16>
 80007a8:	69ab      	ldr	r3, [r5, #24]
 80007aa:	b913      	cbnz	r3, 80007b2 <__swsetup_r+0x16>
 80007ac:	4628      	mov	r0, r5
 80007ae:	f000 f97d 	bl	8000aac <__sinit>
 80007b2:	4b2e      	ldr	r3, [pc, #184]	; (800086c <__swsetup_r+0xd0>)
 80007b4:	429c      	cmp	r4, r3
 80007b6:	d10f      	bne.n	80007d8 <__swsetup_r+0x3c>
 80007b8:	686c      	ldr	r4, [r5, #4]
 80007ba:	89a3      	ldrh	r3, [r4, #12]
 80007bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007c0:	0719      	lsls	r1, r3, #28
 80007c2:	d42c      	bmi.n	800081e <__swsetup_r+0x82>
 80007c4:	06dd      	lsls	r5, r3, #27
 80007c6:	d411      	bmi.n	80007ec <__swsetup_r+0x50>
 80007c8:	2309      	movs	r3, #9
 80007ca:	6033      	str	r3, [r6, #0]
 80007cc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007d0:	81a3      	strh	r3, [r4, #12]
 80007d2:	f04f 30ff 	mov.w	r0, #4294967295
 80007d6:	e03e      	b.n	8000856 <__swsetup_r+0xba>
 80007d8:	4b25      	ldr	r3, [pc, #148]	; (8000870 <__swsetup_r+0xd4>)
 80007da:	429c      	cmp	r4, r3
 80007dc:	d101      	bne.n	80007e2 <__swsetup_r+0x46>
 80007de:	68ac      	ldr	r4, [r5, #8]
 80007e0:	e7eb      	b.n	80007ba <__swsetup_r+0x1e>
 80007e2:	4b24      	ldr	r3, [pc, #144]	; (8000874 <__swsetup_r+0xd8>)
 80007e4:	429c      	cmp	r4, r3
 80007e6:	bf08      	it	eq
 80007e8:	68ec      	ldreq	r4, [r5, #12]
 80007ea:	e7e6      	b.n	80007ba <__swsetup_r+0x1e>
 80007ec:	0758      	lsls	r0, r3, #29
 80007ee:	d512      	bpl.n	8000816 <__swsetup_r+0x7a>
 80007f0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007f2:	b141      	cbz	r1, 8000806 <__swsetup_r+0x6a>
 80007f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f8:	4299      	cmp	r1, r3
 80007fa:	d002      	beq.n	8000802 <__swsetup_r+0x66>
 80007fc:	4630      	mov	r0, r6
 80007fe:	f000 fa5b 	bl	8000cb8 <_free_r>
 8000802:	2300      	movs	r3, #0
 8000804:	6363      	str	r3, [r4, #52]	; 0x34
 8000806:	89a3      	ldrh	r3, [r4, #12]
 8000808:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800080c:	81a3      	strh	r3, [r4, #12]
 800080e:	2300      	movs	r3, #0
 8000810:	6063      	str	r3, [r4, #4]
 8000812:	6923      	ldr	r3, [r4, #16]
 8000814:	6023      	str	r3, [r4, #0]
 8000816:	89a3      	ldrh	r3, [r4, #12]
 8000818:	f043 0308 	orr.w	r3, r3, #8
 800081c:	81a3      	strh	r3, [r4, #12]
 800081e:	6923      	ldr	r3, [r4, #16]
 8000820:	b94b      	cbnz	r3, 8000836 <__swsetup_r+0x9a>
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000828:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800082c:	d003      	beq.n	8000836 <__swsetup_r+0x9a>
 800082e:	4621      	mov	r1, r4
 8000830:	4630      	mov	r0, r6
 8000832:	f000 fa01 	bl	8000c38 <__smakebuf_r>
 8000836:	89a0      	ldrh	r0, [r4, #12]
 8000838:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800083c:	f010 0301 	ands.w	r3, r0, #1
 8000840:	d00a      	beq.n	8000858 <__swsetup_r+0xbc>
 8000842:	2300      	movs	r3, #0
 8000844:	60a3      	str	r3, [r4, #8]
 8000846:	6963      	ldr	r3, [r4, #20]
 8000848:	425b      	negs	r3, r3
 800084a:	61a3      	str	r3, [r4, #24]
 800084c:	6923      	ldr	r3, [r4, #16]
 800084e:	b943      	cbnz	r3, 8000862 <__swsetup_r+0xc6>
 8000850:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000854:	d1ba      	bne.n	80007cc <__swsetup_r+0x30>
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	0781      	lsls	r1, r0, #30
 800085a:	bf58      	it	pl
 800085c:	6963      	ldrpl	r3, [r4, #20]
 800085e:	60a3      	str	r3, [r4, #8]
 8000860:	e7f4      	b.n	800084c <__swsetup_r+0xb0>
 8000862:	2000      	movs	r0, #0
 8000864:	e7f7      	b.n	8000856 <__swsetup_r+0xba>
 8000866:	bf00      	nop
 8000868:	20000000 	.word	0x20000000
 800086c:	08001678 	.word	0x08001678
 8000870:	08001698 	.word	0x08001698
 8000874:	08001658 	.word	0x08001658

08000878 <__sflush_r>:
 8000878:	898a      	ldrh	r2, [r1, #12]
 800087a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800087e:	4605      	mov	r5, r0
 8000880:	0710      	lsls	r0, r2, #28
 8000882:	460c      	mov	r4, r1
 8000884:	d458      	bmi.n	8000938 <__sflush_r+0xc0>
 8000886:	684b      	ldr	r3, [r1, #4]
 8000888:	2b00      	cmp	r3, #0
 800088a:	dc05      	bgt.n	8000898 <__sflush_r+0x20>
 800088c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800088e:	2b00      	cmp	r3, #0
 8000890:	dc02      	bgt.n	8000898 <__sflush_r+0x20>
 8000892:	2000      	movs	r0, #0
 8000894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000898:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800089a:	2e00      	cmp	r6, #0
 800089c:	d0f9      	beq.n	8000892 <__sflush_r+0x1a>
 800089e:	2300      	movs	r3, #0
 80008a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008a4:	682f      	ldr	r7, [r5, #0]
 80008a6:	602b      	str	r3, [r5, #0]
 80008a8:	d032      	beq.n	8000910 <__sflush_r+0x98>
 80008aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008ac:	89a3      	ldrh	r3, [r4, #12]
 80008ae:	075a      	lsls	r2, r3, #29
 80008b0:	d505      	bpl.n	80008be <__sflush_r+0x46>
 80008b2:	6863      	ldr	r3, [r4, #4]
 80008b4:	1ac0      	subs	r0, r0, r3
 80008b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008b8:	b10b      	cbz	r3, 80008be <__sflush_r+0x46>
 80008ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008bc:	1ac0      	subs	r0, r0, r3
 80008be:	2300      	movs	r3, #0
 80008c0:	4602      	mov	r2, r0
 80008c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008c4:	6a21      	ldr	r1, [r4, #32]
 80008c6:	4628      	mov	r0, r5
 80008c8:	47b0      	blx	r6
 80008ca:	1c43      	adds	r3, r0, #1
 80008cc:	89a3      	ldrh	r3, [r4, #12]
 80008ce:	d106      	bne.n	80008de <__sflush_r+0x66>
 80008d0:	6829      	ldr	r1, [r5, #0]
 80008d2:	291d      	cmp	r1, #29
 80008d4:	d82c      	bhi.n	8000930 <__sflush_r+0xb8>
 80008d6:	4a2a      	ldr	r2, [pc, #168]	; (8000980 <__sflush_r+0x108>)
 80008d8:	40ca      	lsrs	r2, r1
 80008da:	07d6      	lsls	r6, r2, #31
 80008dc:	d528      	bpl.n	8000930 <__sflush_r+0xb8>
 80008de:	2200      	movs	r2, #0
 80008e0:	6062      	str	r2, [r4, #4]
 80008e2:	04d9      	lsls	r1, r3, #19
 80008e4:	6922      	ldr	r2, [r4, #16]
 80008e6:	6022      	str	r2, [r4, #0]
 80008e8:	d504      	bpl.n	80008f4 <__sflush_r+0x7c>
 80008ea:	1c42      	adds	r2, r0, #1
 80008ec:	d101      	bne.n	80008f2 <__sflush_r+0x7a>
 80008ee:	682b      	ldr	r3, [r5, #0]
 80008f0:	b903      	cbnz	r3, 80008f4 <__sflush_r+0x7c>
 80008f2:	6560      	str	r0, [r4, #84]	; 0x54
 80008f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008f6:	602f      	str	r7, [r5, #0]
 80008f8:	2900      	cmp	r1, #0
 80008fa:	d0ca      	beq.n	8000892 <__sflush_r+0x1a>
 80008fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000900:	4299      	cmp	r1, r3
 8000902:	d002      	beq.n	800090a <__sflush_r+0x92>
 8000904:	4628      	mov	r0, r5
 8000906:	f000 f9d7 	bl	8000cb8 <_free_r>
 800090a:	2000      	movs	r0, #0
 800090c:	6360      	str	r0, [r4, #52]	; 0x34
 800090e:	e7c1      	b.n	8000894 <__sflush_r+0x1c>
 8000910:	6a21      	ldr	r1, [r4, #32]
 8000912:	2301      	movs	r3, #1
 8000914:	4628      	mov	r0, r5
 8000916:	47b0      	blx	r6
 8000918:	1c41      	adds	r1, r0, #1
 800091a:	d1c7      	bne.n	80008ac <__sflush_r+0x34>
 800091c:	682b      	ldr	r3, [r5, #0]
 800091e:	2b00      	cmp	r3, #0
 8000920:	d0c4      	beq.n	80008ac <__sflush_r+0x34>
 8000922:	2b1d      	cmp	r3, #29
 8000924:	d001      	beq.n	800092a <__sflush_r+0xb2>
 8000926:	2b16      	cmp	r3, #22
 8000928:	d101      	bne.n	800092e <__sflush_r+0xb6>
 800092a:	602f      	str	r7, [r5, #0]
 800092c:	e7b1      	b.n	8000892 <__sflush_r+0x1a>
 800092e:	89a3      	ldrh	r3, [r4, #12]
 8000930:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000934:	81a3      	strh	r3, [r4, #12]
 8000936:	e7ad      	b.n	8000894 <__sflush_r+0x1c>
 8000938:	690f      	ldr	r7, [r1, #16]
 800093a:	2f00      	cmp	r7, #0
 800093c:	d0a9      	beq.n	8000892 <__sflush_r+0x1a>
 800093e:	0793      	lsls	r3, r2, #30
 8000940:	680e      	ldr	r6, [r1, #0]
 8000942:	bf08      	it	eq
 8000944:	694b      	ldreq	r3, [r1, #20]
 8000946:	600f      	str	r7, [r1, #0]
 8000948:	bf18      	it	ne
 800094a:	2300      	movne	r3, #0
 800094c:	eba6 0807 	sub.w	r8, r6, r7
 8000950:	608b      	str	r3, [r1, #8]
 8000952:	f1b8 0f00 	cmp.w	r8, #0
 8000956:	dd9c      	ble.n	8000892 <__sflush_r+0x1a>
 8000958:	6a21      	ldr	r1, [r4, #32]
 800095a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800095c:	4643      	mov	r3, r8
 800095e:	463a      	mov	r2, r7
 8000960:	4628      	mov	r0, r5
 8000962:	47b0      	blx	r6
 8000964:	2800      	cmp	r0, #0
 8000966:	dc06      	bgt.n	8000976 <__sflush_r+0xfe>
 8000968:	89a3      	ldrh	r3, [r4, #12]
 800096a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800096e:	81a3      	strh	r3, [r4, #12]
 8000970:	f04f 30ff 	mov.w	r0, #4294967295
 8000974:	e78e      	b.n	8000894 <__sflush_r+0x1c>
 8000976:	4407      	add	r7, r0
 8000978:	eba8 0800 	sub.w	r8, r8, r0
 800097c:	e7e9      	b.n	8000952 <__sflush_r+0xda>
 800097e:	bf00      	nop
 8000980:	20400001 	.word	0x20400001

08000984 <_fflush_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	690b      	ldr	r3, [r1, #16]
 8000988:	4605      	mov	r5, r0
 800098a:	460c      	mov	r4, r1
 800098c:	b913      	cbnz	r3, 8000994 <_fflush_r+0x10>
 800098e:	2500      	movs	r5, #0
 8000990:	4628      	mov	r0, r5
 8000992:	bd38      	pop	{r3, r4, r5, pc}
 8000994:	b118      	cbz	r0, 800099e <_fflush_r+0x1a>
 8000996:	6983      	ldr	r3, [r0, #24]
 8000998:	b90b      	cbnz	r3, 800099e <_fflush_r+0x1a>
 800099a:	f000 f887 	bl	8000aac <__sinit>
 800099e:	4b14      	ldr	r3, [pc, #80]	; (80009f0 <_fflush_r+0x6c>)
 80009a0:	429c      	cmp	r4, r3
 80009a2:	d11b      	bne.n	80009dc <_fflush_r+0x58>
 80009a4:	686c      	ldr	r4, [r5, #4]
 80009a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009aa:	2b00      	cmp	r3, #0
 80009ac:	d0ef      	beq.n	800098e <_fflush_r+0xa>
 80009ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009b0:	07d0      	lsls	r0, r2, #31
 80009b2:	d404      	bmi.n	80009be <_fflush_r+0x3a>
 80009b4:	0599      	lsls	r1, r3, #22
 80009b6:	d402      	bmi.n	80009be <_fflush_r+0x3a>
 80009b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009ba:	f000 f915 	bl	8000be8 <__retarget_lock_acquire_recursive>
 80009be:	4628      	mov	r0, r5
 80009c0:	4621      	mov	r1, r4
 80009c2:	f7ff ff59 	bl	8000878 <__sflush_r>
 80009c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009c8:	07da      	lsls	r2, r3, #31
 80009ca:	4605      	mov	r5, r0
 80009cc:	d4e0      	bmi.n	8000990 <_fflush_r+0xc>
 80009ce:	89a3      	ldrh	r3, [r4, #12]
 80009d0:	059b      	lsls	r3, r3, #22
 80009d2:	d4dd      	bmi.n	8000990 <_fflush_r+0xc>
 80009d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009d6:	f000 f908 	bl	8000bea <__retarget_lock_release_recursive>
 80009da:	e7d9      	b.n	8000990 <_fflush_r+0xc>
 80009dc:	4b05      	ldr	r3, [pc, #20]	; (80009f4 <_fflush_r+0x70>)
 80009de:	429c      	cmp	r4, r3
 80009e0:	d101      	bne.n	80009e6 <_fflush_r+0x62>
 80009e2:	68ac      	ldr	r4, [r5, #8]
 80009e4:	e7df      	b.n	80009a6 <_fflush_r+0x22>
 80009e6:	4b04      	ldr	r3, [pc, #16]	; (80009f8 <_fflush_r+0x74>)
 80009e8:	429c      	cmp	r4, r3
 80009ea:	bf08      	it	eq
 80009ec:	68ec      	ldreq	r4, [r5, #12]
 80009ee:	e7da      	b.n	80009a6 <_fflush_r+0x22>
 80009f0:	08001678 	.word	0x08001678
 80009f4:	08001698 	.word	0x08001698
 80009f8:	08001658 	.word	0x08001658

080009fc <std>:
 80009fc:	2300      	movs	r3, #0
 80009fe:	b510      	push	{r4, lr}
 8000a00:	4604      	mov	r4, r0
 8000a02:	e9c0 3300 	strd	r3, r3, [r0]
 8000a06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a0a:	6083      	str	r3, [r0, #8]
 8000a0c:	8181      	strh	r1, [r0, #12]
 8000a0e:	6643      	str	r3, [r0, #100]	; 0x64
 8000a10:	81c2      	strh	r2, [r0, #14]
 8000a12:	6183      	str	r3, [r0, #24]
 8000a14:	4619      	mov	r1, r3
 8000a16:	2208      	movs	r2, #8
 8000a18:	305c      	adds	r0, #92	; 0x5c
 8000a1a:	f7ff fdd7 	bl	80005cc <memset>
 8000a1e:	4b05      	ldr	r3, [pc, #20]	; (8000a34 <std+0x38>)
 8000a20:	6263      	str	r3, [r4, #36]	; 0x24
 8000a22:	4b05      	ldr	r3, [pc, #20]	; (8000a38 <std+0x3c>)
 8000a24:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a26:	4b05      	ldr	r3, [pc, #20]	; (8000a3c <std+0x40>)
 8000a28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a2a:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <std+0x44>)
 8000a2c:	6224      	str	r4, [r4, #32]
 8000a2e:	6323      	str	r3, [r4, #48]	; 0x30
 8000a30:	bd10      	pop	{r4, pc}
 8000a32:	bf00      	nop
 8000a34:	08001475 	.word	0x08001475
 8000a38:	08001497 	.word	0x08001497
 8000a3c:	080014cf 	.word	0x080014cf
 8000a40:	080014f3 	.word	0x080014f3

08000a44 <_cleanup_r>:
 8000a44:	4901      	ldr	r1, [pc, #4]	; (8000a4c <_cleanup_r+0x8>)
 8000a46:	f000 b8af 	b.w	8000ba8 <_fwalk_reent>
 8000a4a:	bf00      	nop
 8000a4c:	08000985 	.word	0x08000985

08000a50 <__sfmoreglue>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	2268      	movs	r2, #104	; 0x68
 8000a54:	1e4d      	subs	r5, r1, #1
 8000a56:	4355      	muls	r5, r2
 8000a58:	460e      	mov	r6, r1
 8000a5a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a5e:	f000 f997 	bl	8000d90 <_malloc_r>
 8000a62:	4604      	mov	r4, r0
 8000a64:	b140      	cbz	r0, 8000a78 <__sfmoreglue+0x28>
 8000a66:	2100      	movs	r1, #0
 8000a68:	e9c0 1600 	strd	r1, r6, [r0]
 8000a6c:	300c      	adds	r0, #12
 8000a6e:	60a0      	str	r0, [r4, #8]
 8000a70:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a74:	f7ff fdaa 	bl	80005cc <memset>
 8000a78:	4620      	mov	r0, r4
 8000a7a:	bd70      	pop	{r4, r5, r6, pc}

08000a7c <__sfp_lock_acquire>:
 8000a7c:	4801      	ldr	r0, [pc, #4]	; (8000a84 <__sfp_lock_acquire+0x8>)
 8000a7e:	f000 b8b3 	b.w	8000be8 <__retarget_lock_acquire_recursive>
 8000a82:	bf00      	nop
 8000a84:	20000085 	.word	0x20000085

08000a88 <__sfp_lock_release>:
 8000a88:	4801      	ldr	r0, [pc, #4]	; (8000a90 <__sfp_lock_release+0x8>)
 8000a8a:	f000 b8ae 	b.w	8000bea <__retarget_lock_release_recursive>
 8000a8e:	bf00      	nop
 8000a90:	20000085 	.word	0x20000085

08000a94 <__sinit_lock_acquire>:
 8000a94:	4801      	ldr	r0, [pc, #4]	; (8000a9c <__sinit_lock_acquire+0x8>)
 8000a96:	f000 b8a7 	b.w	8000be8 <__retarget_lock_acquire_recursive>
 8000a9a:	bf00      	nop
 8000a9c:	20000086 	.word	0x20000086

08000aa0 <__sinit_lock_release>:
 8000aa0:	4801      	ldr	r0, [pc, #4]	; (8000aa8 <__sinit_lock_release+0x8>)
 8000aa2:	f000 b8a2 	b.w	8000bea <__retarget_lock_release_recursive>
 8000aa6:	bf00      	nop
 8000aa8:	20000086 	.word	0x20000086

08000aac <__sinit>:
 8000aac:	b510      	push	{r4, lr}
 8000aae:	4604      	mov	r4, r0
 8000ab0:	f7ff fff0 	bl	8000a94 <__sinit_lock_acquire>
 8000ab4:	69a3      	ldr	r3, [r4, #24]
 8000ab6:	b11b      	cbz	r3, 8000ac0 <__sinit+0x14>
 8000ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000abc:	f7ff bff0 	b.w	8000aa0 <__sinit_lock_release>
 8000ac0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ac4:	6523      	str	r3, [r4, #80]	; 0x50
 8000ac6:	4b13      	ldr	r3, [pc, #76]	; (8000b14 <__sinit+0x68>)
 8000ac8:	4a13      	ldr	r2, [pc, #76]	; (8000b18 <__sinit+0x6c>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	62a2      	str	r2, [r4, #40]	; 0x28
 8000ace:	42a3      	cmp	r3, r4
 8000ad0:	bf04      	itt	eq
 8000ad2:	2301      	moveq	r3, #1
 8000ad4:	61a3      	streq	r3, [r4, #24]
 8000ad6:	4620      	mov	r0, r4
 8000ad8:	f000 f820 	bl	8000b1c <__sfp>
 8000adc:	6060      	str	r0, [r4, #4]
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f000 f81c 	bl	8000b1c <__sfp>
 8000ae4:	60a0      	str	r0, [r4, #8]
 8000ae6:	4620      	mov	r0, r4
 8000ae8:	f000 f818 	bl	8000b1c <__sfp>
 8000aec:	2200      	movs	r2, #0
 8000aee:	60e0      	str	r0, [r4, #12]
 8000af0:	2104      	movs	r1, #4
 8000af2:	6860      	ldr	r0, [r4, #4]
 8000af4:	f7ff ff82 	bl	80009fc <std>
 8000af8:	68a0      	ldr	r0, [r4, #8]
 8000afa:	2201      	movs	r2, #1
 8000afc:	2109      	movs	r1, #9
 8000afe:	f7ff ff7d 	bl	80009fc <std>
 8000b02:	68e0      	ldr	r0, [r4, #12]
 8000b04:	2202      	movs	r2, #2
 8000b06:	2112      	movs	r1, #18
 8000b08:	f7ff ff78 	bl	80009fc <std>
 8000b0c:	2301      	movs	r3, #1
 8000b0e:	61a3      	str	r3, [r4, #24]
 8000b10:	e7d2      	b.n	8000ab8 <__sinit+0xc>
 8000b12:	bf00      	nop
 8000b14:	08001654 	.word	0x08001654
 8000b18:	08000a45 	.word	0x08000a45

08000b1c <__sfp>:
 8000b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b1e:	4607      	mov	r7, r0
 8000b20:	f7ff ffac 	bl	8000a7c <__sfp_lock_acquire>
 8000b24:	4b1e      	ldr	r3, [pc, #120]	; (8000ba0 <__sfp+0x84>)
 8000b26:	681e      	ldr	r6, [r3, #0]
 8000b28:	69b3      	ldr	r3, [r6, #24]
 8000b2a:	b913      	cbnz	r3, 8000b32 <__sfp+0x16>
 8000b2c:	4630      	mov	r0, r6
 8000b2e:	f7ff ffbd 	bl	8000aac <__sinit>
 8000b32:	3648      	adds	r6, #72	; 0x48
 8000b34:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b38:	3b01      	subs	r3, #1
 8000b3a:	d503      	bpl.n	8000b44 <__sfp+0x28>
 8000b3c:	6833      	ldr	r3, [r6, #0]
 8000b3e:	b30b      	cbz	r3, 8000b84 <__sfp+0x68>
 8000b40:	6836      	ldr	r6, [r6, #0]
 8000b42:	e7f7      	b.n	8000b34 <__sfp+0x18>
 8000b44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b48:	b9d5      	cbnz	r5, 8000b80 <__sfp+0x64>
 8000b4a:	4b16      	ldr	r3, [pc, #88]	; (8000ba4 <__sfp+0x88>)
 8000b4c:	60e3      	str	r3, [r4, #12]
 8000b4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b52:	6665      	str	r5, [r4, #100]	; 0x64
 8000b54:	f000 f847 	bl	8000be6 <__retarget_lock_init_recursive>
 8000b58:	f7ff ff96 	bl	8000a88 <__sfp_lock_release>
 8000b5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b64:	6025      	str	r5, [r4, #0]
 8000b66:	61a5      	str	r5, [r4, #24]
 8000b68:	2208      	movs	r2, #8
 8000b6a:	4629      	mov	r1, r5
 8000b6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b70:	f7ff fd2c 	bl	80005cc <memset>
 8000b74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b7c:	4620      	mov	r0, r4
 8000b7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b80:	3468      	adds	r4, #104	; 0x68
 8000b82:	e7d9      	b.n	8000b38 <__sfp+0x1c>
 8000b84:	2104      	movs	r1, #4
 8000b86:	4638      	mov	r0, r7
 8000b88:	f7ff ff62 	bl	8000a50 <__sfmoreglue>
 8000b8c:	4604      	mov	r4, r0
 8000b8e:	6030      	str	r0, [r6, #0]
 8000b90:	2800      	cmp	r0, #0
 8000b92:	d1d5      	bne.n	8000b40 <__sfp+0x24>
 8000b94:	f7ff ff78 	bl	8000a88 <__sfp_lock_release>
 8000b98:	230c      	movs	r3, #12
 8000b9a:	603b      	str	r3, [r7, #0]
 8000b9c:	e7ee      	b.n	8000b7c <__sfp+0x60>
 8000b9e:	bf00      	nop
 8000ba0:	08001654 	.word	0x08001654
 8000ba4:	ffff0001 	.word	0xffff0001

08000ba8 <_fwalk_reent>:
 8000ba8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bac:	4606      	mov	r6, r0
 8000bae:	4688      	mov	r8, r1
 8000bb0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bb4:	2700      	movs	r7, #0
 8000bb6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bba:	f1b9 0901 	subs.w	r9, r9, #1
 8000bbe:	d505      	bpl.n	8000bcc <_fwalk_reent+0x24>
 8000bc0:	6824      	ldr	r4, [r4, #0]
 8000bc2:	2c00      	cmp	r4, #0
 8000bc4:	d1f7      	bne.n	8000bb6 <_fwalk_reent+0xe>
 8000bc6:	4638      	mov	r0, r7
 8000bc8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bcc:	89ab      	ldrh	r3, [r5, #12]
 8000bce:	2b01      	cmp	r3, #1
 8000bd0:	d907      	bls.n	8000be2 <_fwalk_reent+0x3a>
 8000bd2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bd6:	3301      	adds	r3, #1
 8000bd8:	d003      	beq.n	8000be2 <_fwalk_reent+0x3a>
 8000bda:	4629      	mov	r1, r5
 8000bdc:	4630      	mov	r0, r6
 8000bde:	47c0      	blx	r8
 8000be0:	4307      	orrs	r7, r0
 8000be2:	3568      	adds	r5, #104	; 0x68
 8000be4:	e7e9      	b.n	8000bba <_fwalk_reent+0x12>

08000be6 <__retarget_lock_init_recursive>:
 8000be6:	4770      	bx	lr

08000be8 <__retarget_lock_acquire_recursive>:
 8000be8:	4770      	bx	lr

08000bea <__retarget_lock_release_recursive>:
 8000bea:	4770      	bx	lr

08000bec <__swhatbuf_r>:
 8000bec:	b570      	push	{r4, r5, r6, lr}
 8000bee:	460e      	mov	r6, r1
 8000bf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bf4:	2900      	cmp	r1, #0
 8000bf6:	b096      	sub	sp, #88	; 0x58
 8000bf8:	4614      	mov	r4, r2
 8000bfa:	461d      	mov	r5, r3
 8000bfc:	da08      	bge.n	8000c10 <__swhatbuf_r+0x24>
 8000bfe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000c02:	2200      	movs	r2, #0
 8000c04:	602a      	str	r2, [r5, #0]
 8000c06:	061a      	lsls	r2, r3, #24
 8000c08:	d410      	bmi.n	8000c2c <__swhatbuf_r+0x40>
 8000c0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c0e:	e00e      	b.n	8000c2e <__swhatbuf_r+0x42>
 8000c10:	466a      	mov	r2, sp
 8000c12:	f000 fc95 	bl	8001540 <_fstat_r>
 8000c16:	2800      	cmp	r0, #0
 8000c18:	dbf1      	blt.n	8000bfe <__swhatbuf_r+0x12>
 8000c1a:	9a01      	ldr	r2, [sp, #4]
 8000c1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c24:	425a      	negs	r2, r3
 8000c26:	415a      	adcs	r2, r3
 8000c28:	602a      	str	r2, [r5, #0]
 8000c2a:	e7ee      	b.n	8000c0a <__swhatbuf_r+0x1e>
 8000c2c:	2340      	movs	r3, #64	; 0x40
 8000c2e:	2000      	movs	r0, #0
 8000c30:	6023      	str	r3, [r4, #0]
 8000c32:	b016      	add	sp, #88	; 0x58
 8000c34:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c38 <__smakebuf_r>:
 8000c38:	898b      	ldrh	r3, [r1, #12]
 8000c3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c3c:	079d      	lsls	r5, r3, #30
 8000c3e:	4606      	mov	r6, r0
 8000c40:	460c      	mov	r4, r1
 8000c42:	d507      	bpl.n	8000c54 <__smakebuf_r+0x1c>
 8000c44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c48:	6023      	str	r3, [r4, #0]
 8000c4a:	6123      	str	r3, [r4, #16]
 8000c4c:	2301      	movs	r3, #1
 8000c4e:	6163      	str	r3, [r4, #20]
 8000c50:	b002      	add	sp, #8
 8000c52:	bd70      	pop	{r4, r5, r6, pc}
 8000c54:	ab01      	add	r3, sp, #4
 8000c56:	466a      	mov	r2, sp
 8000c58:	f7ff ffc8 	bl	8000bec <__swhatbuf_r>
 8000c5c:	9900      	ldr	r1, [sp, #0]
 8000c5e:	4605      	mov	r5, r0
 8000c60:	4630      	mov	r0, r6
 8000c62:	f000 f895 	bl	8000d90 <_malloc_r>
 8000c66:	b948      	cbnz	r0, 8000c7c <__smakebuf_r+0x44>
 8000c68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c6c:	059a      	lsls	r2, r3, #22
 8000c6e:	d4ef      	bmi.n	8000c50 <__smakebuf_r+0x18>
 8000c70:	f023 0303 	bic.w	r3, r3, #3
 8000c74:	f043 0302 	orr.w	r3, r3, #2
 8000c78:	81a3      	strh	r3, [r4, #12]
 8000c7a:	e7e3      	b.n	8000c44 <__smakebuf_r+0xc>
 8000c7c:	4b0d      	ldr	r3, [pc, #52]	; (8000cb4 <__smakebuf_r+0x7c>)
 8000c7e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c80:	89a3      	ldrh	r3, [r4, #12]
 8000c82:	6020      	str	r0, [r4, #0]
 8000c84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c88:	81a3      	strh	r3, [r4, #12]
 8000c8a:	9b00      	ldr	r3, [sp, #0]
 8000c8c:	6163      	str	r3, [r4, #20]
 8000c8e:	9b01      	ldr	r3, [sp, #4]
 8000c90:	6120      	str	r0, [r4, #16]
 8000c92:	b15b      	cbz	r3, 8000cac <__smakebuf_r+0x74>
 8000c94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c98:	4630      	mov	r0, r6
 8000c9a:	f000 fc63 	bl	8001564 <_isatty_r>
 8000c9e:	b128      	cbz	r0, 8000cac <__smakebuf_r+0x74>
 8000ca0:	89a3      	ldrh	r3, [r4, #12]
 8000ca2:	f023 0303 	bic.w	r3, r3, #3
 8000ca6:	f043 0301 	orr.w	r3, r3, #1
 8000caa:	81a3      	strh	r3, [r4, #12]
 8000cac:	89a0      	ldrh	r0, [r4, #12]
 8000cae:	4305      	orrs	r5, r0
 8000cb0:	81a5      	strh	r5, [r4, #12]
 8000cb2:	e7cd      	b.n	8000c50 <__smakebuf_r+0x18>
 8000cb4:	08000a45 	.word	0x08000a45

08000cb8 <_free_r>:
 8000cb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cba:	2900      	cmp	r1, #0
 8000cbc:	d044      	beq.n	8000d48 <_free_r+0x90>
 8000cbe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cc2:	9001      	str	r0, [sp, #4]
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	f1a1 0404 	sub.w	r4, r1, #4
 8000cca:	bfb8      	it	lt
 8000ccc:	18e4      	addlt	r4, r4, r3
 8000cce:	f000 fc6b 	bl	80015a8 <__malloc_lock>
 8000cd2:	4a1e      	ldr	r2, [pc, #120]	; (8000d4c <_free_r+0x94>)
 8000cd4:	9801      	ldr	r0, [sp, #4]
 8000cd6:	6813      	ldr	r3, [r2, #0]
 8000cd8:	b933      	cbnz	r3, 8000ce8 <_free_r+0x30>
 8000cda:	6063      	str	r3, [r4, #4]
 8000cdc:	6014      	str	r4, [r2, #0]
 8000cde:	b003      	add	sp, #12
 8000ce0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000ce4:	f000 bc66 	b.w	80015b4 <__malloc_unlock>
 8000ce8:	42a3      	cmp	r3, r4
 8000cea:	d908      	bls.n	8000cfe <_free_r+0x46>
 8000cec:	6825      	ldr	r5, [r4, #0]
 8000cee:	1961      	adds	r1, r4, r5
 8000cf0:	428b      	cmp	r3, r1
 8000cf2:	bf01      	itttt	eq
 8000cf4:	6819      	ldreq	r1, [r3, #0]
 8000cf6:	685b      	ldreq	r3, [r3, #4]
 8000cf8:	1949      	addeq	r1, r1, r5
 8000cfa:	6021      	streq	r1, [r4, #0]
 8000cfc:	e7ed      	b.n	8000cda <_free_r+0x22>
 8000cfe:	461a      	mov	r2, r3
 8000d00:	685b      	ldr	r3, [r3, #4]
 8000d02:	b10b      	cbz	r3, 8000d08 <_free_r+0x50>
 8000d04:	42a3      	cmp	r3, r4
 8000d06:	d9fa      	bls.n	8000cfe <_free_r+0x46>
 8000d08:	6811      	ldr	r1, [r2, #0]
 8000d0a:	1855      	adds	r5, r2, r1
 8000d0c:	42a5      	cmp	r5, r4
 8000d0e:	d10b      	bne.n	8000d28 <_free_r+0x70>
 8000d10:	6824      	ldr	r4, [r4, #0]
 8000d12:	4421      	add	r1, r4
 8000d14:	1854      	adds	r4, r2, r1
 8000d16:	42a3      	cmp	r3, r4
 8000d18:	6011      	str	r1, [r2, #0]
 8000d1a:	d1e0      	bne.n	8000cde <_free_r+0x26>
 8000d1c:	681c      	ldr	r4, [r3, #0]
 8000d1e:	685b      	ldr	r3, [r3, #4]
 8000d20:	6053      	str	r3, [r2, #4]
 8000d22:	4421      	add	r1, r4
 8000d24:	6011      	str	r1, [r2, #0]
 8000d26:	e7da      	b.n	8000cde <_free_r+0x26>
 8000d28:	d902      	bls.n	8000d30 <_free_r+0x78>
 8000d2a:	230c      	movs	r3, #12
 8000d2c:	6003      	str	r3, [r0, #0]
 8000d2e:	e7d6      	b.n	8000cde <_free_r+0x26>
 8000d30:	6825      	ldr	r5, [r4, #0]
 8000d32:	1961      	adds	r1, r4, r5
 8000d34:	428b      	cmp	r3, r1
 8000d36:	bf04      	itt	eq
 8000d38:	6819      	ldreq	r1, [r3, #0]
 8000d3a:	685b      	ldreq	r3, [r3, #4]
 8000d3c:	6063      	str	r3, [r4, #4]
 8000d3e:	bf04      	itt	eq
 8000d40:	1949      	addeq	r1, r1, r5
 8000d42:	6021      	streq	r1, [r4, #0]
 8000d44:	6054      	str	r4, [r2, #4]
 8000d46:	e7ca      	b.n	8000cde <_free_r+0x26>
 8000d48:	b003      	add	sp, #12
 8000d4a:	bd30      	pop	{r4, r5, pc}
 8000d4c:	20000088 	.word	0x20000088

08000d50 <sbrk_aligned>:
 8000d50:	b570      	push	{r4, r5, r6, lr}
 8000d52:	4e0e      	ldr	r6, [pc, #56]	; (8000d8c <sbrk_aligned+0x3c>)
 8000d54:	460c      	mov	r4, r1
 8000d56:	6831      	ldr	r1, [r6, #0]
 8000d58:	4605      	mov	r5, r0
 8000d5a:	b911      	cbnz	r1, 8000d62 <sbrk_aligned+0x12>
 8000d5c:	f000 fb7a 	bl	8001454 <_sbrk_r>
 8000d60:	6030      	str	r0, [r6, #0]
 8000d62:	4621      	mov	r1, r4
 8000d64:	4628      	mov	r0, r5
 8000d66:	f000 fb75 	bl	8001454 <_sbrk_r>
 8000d6a:	1c43      	adds	r3, r0, #1
 8000d6c:	d00a      	beq.n	8000d84 <sbrk_aligned+0x34>
 8000d6e:	1cc4      	adds	r4, r0, #3
 8000d70:	f024 0403 	bic.w	r4, r4, #3
 8000d74:	42a0      	cmp	r0, r4
 8000d76:	d007      	beq.n	8000d88 <sbrk_aligned+0x38>
 8000d78:	1a21      	subs	r1, r4, r0
 8000d7a:	4628      	mov	r0, r5
 8000d7c:	f000 fb6a 	bl	8001454 <_sbrk_r>
 8000d80:	3001      	adds	r0, #1
 8000d82:	d101      	bne.n	8000d88 <sbrk_aligned+0x38>
 8000d84:	f04f 34ff 	mov.w	r4, #4294967295
 8000d88:	4620      	mov	r0, r4
 8000d8a:	bd70      	pop	{r4, r5, r6, pc}
 8000d8c:	2000008c 	.word	0x2000008c

08000d90 <_malloc_r>:
 8000d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d94:	1ccd      	adds	r5, r1, #3
 8000d96:	f025 0503 	bic.w	r5, r5, #3
 8000d9a:	3508      	adds	r5, #8
 8000d9c:	2d0c      	cmp	r5, #12
 8000d9e:	bf38      	it	cc
 8000da0:	250c      	movcc	r5, #12
 8000da2:	2d00      	cmp	r5, #0
 8000da4:	4607      	mov	r7, r0
 8000da6:	db01      	blt.n	8000dac <_malloc_r+0x1c>
 8000da8:	42a9      	cmp	r1, r5
 8000daa:	d905      	bls.n	8000db8 <_malloc_r+0x28>
 8000dac:	230c      	movs	r3, #12
 8000dae:	603b      	str	r3, [r7, #0]
 8000db0:	2600      	movs	r6, #0
 8000db2:	4630      	mov	r0, r6
 8000db4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000db8:	4e2e      	ldr	r6, [pc, #184]	; (8000e74 <_malloc_r+0xe4>)
 8000dba:	f000 fbf5 	bl	80015a8 <__malloc_lock>
 8000dbe:	6833      	ldr	r3, [r6, #0]
 8000dc0:	461c      	mov	r4, r3
 8000dc2:	bb34      	cbnz	r4, 8000e12 <_malloc_r+0x82>
 8000dc4:	4629      	mov	r1, r5
 8000dc6:	4638      	mov	r0, r7
 8000dc8:	f7ff ffc2 	bl	8000d50 <sbrk_aligned>
 8000dcc:	1c43      	adds	r3, r0, #1
 8000dce:	4604      	mov	r4, r0
 8000dd0:	d14d      	bne.n	8000e6e <_malloc_r+0xde>
 8000dd2:	6834      	ldr	r4, [r6, #0]
 8000dd4:	4626      	mov	r6, r4
 8000dd6:	2e00      	cmp	r6, #0
 8000dd8:	d140      	bne.n	8000e5c <_malloc_r+0xcc>
 8000dda:	6823      	ldr	r3, [r4, #0]
 8000ddc:	4631      	mov	r1, r6
 8000dde:	4638      	mov	r0, r7
 8000de0:	eb04 0803 	add.w	r8, r4, r3
 8000de4:	f000 fb36 	bl	8001454 <_sbrk_r>
 8000de8:	4580      	cmp	r8, r0
 8000dea:	d13a      	bne.n	8000e62 <_malloc_r+0xd2>
 8000dec:	6821      	ldr	r1, [r4, #0]
 8000dee:	3503      	adds	r5, #3
 8000df0:	1a6d      	subs	r5, r5, r1
 8000df2:	f025 0503 	bic.w	r5, r5, #3
 8000df6:	3508      	adds	r5, #8
 8000df8:	2d0c      	cmp	r5, #12
 8000dfa:	bf38      	it	cc
 8000dfc:	250c      	movcc	r5, #12
 8000dfe:	4629      	mov	r1, r5
 8000e00:	4638      	mov	r0, r7
 8000e02:	f7ff ffa5 	bl	8000d50 <sbrk_aligned>
 8000e06:	3001      	adds	r0, #1
 8000e08:	d02b      	beq.n	8000e62 <_malloc_r+0xd2>
 8000e0a:	6823      	ldr	r3, [r4, #0]
 8000e0c:	442b      	add	r3, r5
 8000e0e:	6023      	str	r3, [r4, #0]
 8000e10:	e00e      	b.n	8000e30 <_malloc_r+0xa0>
 8000e12:	6822      	ldr	r2, [r4, #0]
 8000e14:	1b52      	subs	r2, r2, r5
 8000e16:	d41e      	bmi.n	8000e56 <_malloc_r+0xc6>
 8000e18:	2a0b      	cmp	r2, #11
 8000e1a:	d916      	bls.n	8000e4a <_malloc_r+0xba>
 8000e1c:	1961      	adds	r1, r4, r5
 8000e1e:	42a3      	cmp	r3, r4
 8000e20:	6025      	str	r5, [r4, #0]
 8000e22:	bf18      	it	ne
 8000e24:	6059      	strne	r1, [r3, #4]
 8000e26:	6863      	ldr	r3, [r4, #4]
 8000e28:	bf08      	it	eq
 8000e2a:	6031      	streq	r1, [r6, #0]
 8000e2c:	5162      	str	r2, [r4, r5]
 8000e2e:	604b      	str	r3, [r1, #4]
 8000e30:	4638      	mov	r0, r7
 8000e32:	f104 060b 	add.w	r6, r4, #11
 8000e36:	f000 fbbd 	bl	80015b4 <__malloc_unlock>
 8000e3a:	f026 0607 	bic.w	r6, r6, #7
 8000e3e:	1d23      	adds	r3, r4, #4
 8000e40:	1af2      	subs	r2, r6, r3
 8000e42:	d0b6      	beq.n	8000db2 <_malloc_r+0x22>
 8000e44:	1b9b      	subs	r3, r3, r6
 8000e46:	50a3      	str	r3, [r4, r2]
 8000e48:	e7b3      	b.n	8000db2 <_malloc_r+0x22>
 8000e4a:	6862      	ldr	r2, [r4, #4]
 8000e4c:	42a3      	cmp	r3, r4
 8000e4e:	bf0c      	ite	eq
 8000e50:	6032      	streq	r2, [r6, #0]
 8000e52:	605a      	strne	r2, [r3, #4]
 8000e54:	e7ec      	b.n	8000e30 <_malloc_r+0xa0>
 8000e56:	4623      	mov	r3, r4
 8000e58:	6864      	ldr	r4, [r4, #4]
 8000e5a:	e7b2      	b.n	8000dc2 <_malloc_r+0x32>
 8000e5c:	4634      	mov	r4, r6
 8000e5e:	6876      	ldr	r6, [r6, #4]
 8000e60:	e7b9      	b.n	8000dd6 <_malloc_r+0x46>
 8000e62:	230c      	movs	r3, #12
 8000e64:	603b      	str	r3, [r7, #0]
 8000e66:	4638      	mov	r0, r7
 8000e68:	f000 fba4 	bl	80015b4 <__malloc_unlock>
 8000e6c:	e7a1      	b.n	8000db2 <_malloc_r+0x22>
 8000e6e:	6025      	str	r5, [r4, #0]
 8000e70:	e7de      	b.n	8000e30 <_malloc_r+0xa0>
 8000e72:	bf00      	nop
 8000e74:	20000088 	.word	0x20000088

08000e78 <__sfputc_r>:
 8000e78:	6893      	ldr	r3, [r2, #8]
 8000e7a:	3b01      	subs	r3, #1
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	b410      	push	{r4}
 8000e80:	6093      	str	r3, [r2, #8]
 8000e82:	da08      	bge.n	8000e96 <__sfputc_r+0x1e>
 8000e84:	6994      	ldr	r4, [r2, #24]
 8000e86:	42a3      	cmp	r3, r4
 8000e88:	db01      	blt.n	8000e8e <__sfputc_r+0x16>
 8000e8a:	290a      	cmp	r1, #10
 8000e8c:	d103      	bne.n	8000e96 <__sfputc_r+0x1e>
 8000e8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e92:	f7ff bc31 	b.w	80006f8 <__swbuf_r>
 8000e96:	6813      	ldr	r3, [r2, #0]
 8000e98:	1c58      	adds	r0, r3, #1
 8000e9a:	6010      	str	r0, [r2, #0]
 8000e9c:	7019      	strb	r1, [r3, #0]
 8000e9e:	4608      	mov	r0, r1
 8000ea0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ea4:	4770      	bx	lr

08000ea6 <__sfputs_r>:
 8000ea6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ea8:	4606      	mov	r6, r0
 8000eaa:	460f      	mov	r7, r1
 8000eac:	4614      	mov	r4, r2
 8000eae:	18d5      	adds	r5, r2, r3
 8000eb0:	42ac      	cmp	r4, r5
 8000eb2:	d101      	bne.n	8000eb8 <__sfputs_r+0x12>
 8000eb4:	2000      	movs	r0, #0
 8000eb6:	e007      	b.n	8000ec8 <__sfputs_r+0x22>
 8000eb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ebc:	463a      	mov	r2, r7
 8000ebe:	4630      	mov	r0, r6
 8000ec0:	f7ff ffda 	bl	8000e78 <__sfputc_r>
 8000ec4:	1c43      	adds	r3, r0, #1
 8000ec6:	d1f3      	bne.n	8000eb0 <__sfputs_r+0xa>
 8000ec8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ecc <_vfiprintf_r>:
 8000ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ed0:	460d      	mov	r5, r1
 8000ed2:	b09d      	sub	sp, #116	; 0x74
 8000ed4:	4614      	mov	r4, r2
 8000ed6:	4698      	mov	r8, r3
 8000ed8:	4606      	mov	r6, r0
 8000eda:	b118      	cbz	r0, 8000ee4 <_vfiprintf_r+0x18>
 8000edc:	6983      	ldr	r3, [r0, #24]
 8000ede:	b90b      	cbnz	r3, 8000ee4 <_vfiprintf_r+0x18>
 8000ee0:	f7ff fde4 	bl	8000aac <__sinit>
 8000ee4:	4b89      	ldr	r3, [pc, #548]	; (800110c <_vfiprintf_r+0x240>)
 8000ee6:	429d      	cmp	r5, r3
 8000ee8:	d11b      	bne.n	8000f22 <_vfiprintf_r+0x56>
 8000eea:	6875      	ldr	r5, [r6, #4]
 8000eec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000eee:	07d9      	lsls	r1, r3, #31
 8000ef0:	d405      	bmi.n	8000efe <_vfiprintf_r+0x32>
 8000ef2:	89ab      	ldrh	r3, [r5, #12]
 8000ef4:	059a      	lsls	r2, r3, #22
 8000ef6:	d402      	bmi.n	8000efe <_vfiprintf_r+0x32>
 8000ef8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000efa:	f7ff fe75 	bl	8000be8 <__retarget_lock_acquire_recursive>
 8000efe:	89ab      	ldrh	r3, [r5, #12]
 8000f00:	071b      	lsls	r3, r3, #28
 8000f02:	d501      	bpl.n	8000f08 <_vfiprintf_r+0x3c>
 8000f04:	692b      	ldr	r3, [r5, #16]
 8000f06:	b9eb      	cbnz	r3, 8000f44 <_vfiprintf_r+0x78>
 8000f08:	4629      	mov	r1, r5
 8000f0a:	4630      	mov	r0, r6
 8000f0c:	f7ff fc46 	bl	800079c <__swsetup_r>
 8000f10:	b1c0      	cbz	r0, 8000f44 <_vfiprintf_r+0x78>
 8000f12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f14:	07dc      	lsls	r4, r3, #31
 8000f16:	d50e      	bpl.n	8000f36 <_vfiprintf_r+0x6a>
 8000f18:	f04f 30ff 	mov.w	r0, #4294967295
 8000f1c:	b01d      	add	sp, #116	; 0x74
 8000f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f22:	4b7b      	ldr	r3, [pc, #492]	; (8001110 <_vfiprintf_r+0x244>)
 8000f24:	429d      	cmp	r5, r3
 8000f26:	d101      	bne.n	8000f2c <_vfiprintf_r+0x60>
 8000f28:	68b5      	ldr	r5, [r6, #8]
 8000f2a:	e7df      	b.n	8000eec <_vfiprintf_r+0x20>
 8000f2c:	4b79      	ldr	r3, [pc, #484]	; (8001114 <_vfiprintf_r+0x248>)
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	bf08      	it	eq
 8000f32:	68f5      	ldreq	r5, [r6, #12]
 8000f34:	e7da      	b.n	8000eec <_vfiprintf_r+0x20>
 8000f36:	89ab      	ldrh	r3, [r5, #12]
 8000f38:	0598      	lsls	r0, r3, #22
 8000f3a:	d4ed      	bmi.n	8000f18 <_vfiprintf_r+0x4c>
 8000f3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f3e:	f7ff fe54 	bl	8000bea <__retarget_lock_release_recursive>
 8000f42:	e7e9      	b.n	8000f18 <_vfiprintf_r+0x4c>
 8000f44:	2300      	movs	r3, #0
 8000f46:	9309      	str	r3, [sp, #36]	; 0x24
 8000f48:	2320      	movs	r3, #32
 8000f4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f4e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f52:	2330      	movs	r3, #48	; 0x30
 8000f54:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001118 <_vfiprintf_r+0x24c>
 8000f58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f5c:	f04f 0901 	mov.w	r9, #1
 8000f60:	4623      	mov	r3, r4
 8000f62:	469a      	mov	sl, r3
 8000f64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f68:	b10a      	cbz	r2, 8000f6e <_vfiprintf_r+0xa2>
 8000f6a:	2a25      	cmp	r2, #37	; 0x25
 8000f6c:	d1f9      	bne.n	8000f62 <_vfiprintf_r+0x96>
 8000f6e:	ebba 0b04 	subs.w	fp, sl, r4
 8000f72:	d00b      	beq.n	8000f8c <_vfiprintf_r+0xc0>
 8000f74:	465b      	mov	r3, fp
 8000f76:	4622      	mov	r2, r4
 8000f78:	4629      	mov	r1, r5
 8000f7a:	4630      	mov	r0, r6
 8000f7c:	f7ff ff93 	bl	8000ea6 <__sfputs_r>
 8000f80:	3001      	adds	r0, #1
 8000f82:	f000 80aa 	beq.w	80010da <_vfiprintf_r+0x20e>
 8000f86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f88:	445a      	add	r2, fp
 8000f8a:	9209      	str	r2, [sp, #36]	; 0x24
 8000f8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000f90:	2b00      	cmp	r3, #0
 8000f92:	f000 80a2 	beq.w	80010da <_vfiprintf_r+0x20e>
 8000f96:	2300      	movs	r3, #0
 8000f98:	f04f 32ff 	mov.w	r2, #4294967295
 8000f9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000fa0:	f10a 0a01 	add.w	sl, sl, #1
 8000fa4:	9304      	str	r3, [sp, #16]
 8000fa6:	9307      	str	r3, [sp, #28]
 8000fa8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000fac:	931a      	str	r3, [sp, #104]	; 0x68
 8000fae:	4654      	mov	r4, sl
 8000fb0:	2205      	movs	r2, #5
 8000fb2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fb6:	4858      	ldr	r0, [pc, #352]	; (8001118 <_vfiprintf_r+0x24c>)
 8000fb8:	f7ff f91a 	bl	80001f0 <memchr>
 8000fbc:	9a04      	ldr	r2, [sp, #16]
 8000fbe:	b9d8      	cbnz	r0, 8000ff8 <_vfiprintf_r+0x12c>
 8000fc0:	06d1      	lsls	r1, r2, #27
 8000fc2:	bf44      	itt	mi
 8000fc4:	2320      	movmi	r3, #32
 8000fc6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fca:	0713      	lsls	r3, r2, #28
 8000fcc:	bf44      	itt	mi
 8000fce:	232b      	movmi	r3, #43	; 0x2b
 8000fd0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fd4:	f89a 3000 	ldrb.w	r3, [sl]
 8000fd8:	2b2a      	cmp	r3, #42	; 0x2a
 8000fda:	d015      	beq.n	8001008 <_vfiprintf_r+0x13c>
 8000fdc:	9a07      	ldr	r2, [sp, #28]
 8000fde:	4654      	mov	r4, sl
 8000fe0:	2000      	movs	r0, #0
 8000fe2:	f04f 0c0a 	mov.w	ip, #10
 8000fe6:	4621      	mov	r1, r4
 8000fe8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000fec:	3b30      	subs	r3, #48	; 0x30
 8000fee:	2b09      	cmp	r3, #9
 8000ff0:	d94e      	bls.n	8001090 <_vfiprintf_r+0x1c4>
 8000ff2:	b1b0      	cbz	r0, 8001022 <_vfiprintf_r+0x156>
 8000ff4:	9207      	str	r2, [sp, #28]
 8000ff6:	e014      	b.n	8001022 <_vfiprintf_r+0x156>
 8000ff8:	eba0 0308 	sub.w	r3, r0, r8
 8000ffc:	fa09 f303 	lsl.w	r3, r9, r3
 8001000:	4313      	orrs	r3, r2
 8001002:	9304      	str	r3, [sp, #16]
 8001004:	46a2      	mov	sl, r4
 8001006:	e7d2      	b.n	8000fae <_vfiprintf_r+0xe2>
 8001008:	9b03      	ldr	r3, [sp, #12]
 800100a:	1d19      	adds	r1, r3, #4
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	9103      	str	r1, [sp, #12]
 8001010:	2b00      	cmp	r3, #0
 8001012:	bfbb      	ittet	lt
 8001014:	425b      	neglt	r3, r3
 8001016:	f042 0202 	orrlt.w	r2, r2, #2
 800101a:	9307      	strge	r3, [sp, #28]
 800101c:	9307      	strlt	r3, [sp, #28]
 800101e:	bfb8      	it	lt
 8001020:	9204      	strlt	r2, [sp, #16]
 8001022:	7823      	ldrb	r3, [r4, #0]
 8001024:	2b2e      	cmp	r3, #46	; 0x2e
 8001026:	d10c      	bne.n	8001042 <_vfiprintf_r+0x176>
 8001028:	7863      	ldrb	r3, [r4, #1]
 800102a:	2b2a      	cmp	r3, #42	; 0x2a
 800102c:	d135      	bne.n	800109a <_vfiprintf_r+0x1ce>
 800102e:	9b03      	ldr	r3, [sp, #12]
 8001030:	1d1a      	adds	r2, r3, #4
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	9203      	str	r2, [sp, #12]
 8001036:	2b00      	cmp	r3, #0
 8001038:	bfb8      	it	lt
 800103a:	f04f 33ff 	movlt.w	r3, #4294967295
 800103e:	3402      	adds	r4, #2
 8001040:	9305      	str	r3, [sp, #20]
 8001042:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001128 <_vfiprintf_r+0x25c>
 8001046:	7821      	ldrb	r1, [r4, #0]
 8001048:	2203      	movs	r2, #3
 800104a:	4650      	mov	r0, sl
 800104c:	f7ff f8d0 	bl	80001f0 <memchr>
 8001050:	b140      	cbz	r0, 8001064 <_vfiprintf_r+0x198>
 8001052:	2340      	movs	r3, #64	; 0x40
 8001054:	eba0 000a 	sub.w	r0, r0, sl
 8001058:	fa03 f000 	lsl.w	r0, r3, r0
 800105c:	9b04      	ldr	r3, [sp, #16]
 800105e:	4303      	orrs	r3, r0
 8001060:	3401      	adds	r4, #1
 8001062:	9304      	str	r3, [sp, #16]
 8001064:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001068:	482c      	ldr	r0, [pc, #176]	; (800111c <_vfiprintf_r+0x250>)
 800106a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800106e:	2206      	movs	r2, #6
 8001070:	f7ff f8be 	bl	80001f0 <memchr>
 8001074:	2800      	cmp	r0, #0
 8001076:	d03f      	beq.n	80010f8 <_vfiprintf_r+0x22c>
 8001078:	4b29      	ldr	r3, [pc, #164]	; (8001120 <_vfiprintf_r+0x254>)
 800107a:	bb1b      	cbnz	r3, 80010c4 <_vfiprintf_r+0x1f8>
 800107c:	9b03      	ldr	r3, [sp, #12]
 800107e:	3307      	adds	r3, #7
 8001080:	f023 0307 	bic.w	r3, r3, #7
 8001084:	3308      	adds	r3, #8
 8001086:	9303      	str	r3, [sp, #12]
 8001088:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800108a:	443b      	add	r3, r7
 800108c:	9309      	str	r3, [sp, #36]	; 0x24
 800108e:	e767      	b.n	8000f60 <_vfiprintf_r+0x94>
 8001090:	fb0c 3202 	mla	r2, ip, r2, r3
 8001094:	460c      	mov	r4, r1
 8001096:	2001      	movs	r0, #1
 8001098:	e7a5      	b.n	8000fe6 <_vfiprintf_r+0x11a>
 800109a:	2300      	movs	r3, #0
 800109c:	3401      	adds	r4, #1
 800109e:	9305      	str	r3, [sp, #20]
 80010a0:	4619      	mov	r1, r3
 80010a2:	f04f 0c0a 	mov.w	ip, #10
 80010a6:	4620      	mov	r0, r4
 80010a8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80010ac:	3a30      	subs	r2, #48	; 0x30
 80010ae:	2a09      	cmp	r2, #9
 80010b0:	d903      	bls.n	80010ba <_vfiprintf_r+0x1ee>
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d0c5      	beq.n	8001042 <_vfiprintf_r+0x176>
 80010b6:	9105      	str	r1, [sp, #20]
 80010b8:	e7c3      	b.n	8001042 <_vfiprintf_r+0x176>
 80010ba:	fb0c 2101 	mla	r1, ip, r1, r2
 80010be:	4604      	mov	r4, r0
 80010c0:	2301      	movs	r3, #1
 80010c2:	e7f0      	b.n	80010a6 <_vfiprintf_r+0x1da>
 80010c4:	ab03      	add	r3, sp, #12
 80010c6:	9300      	str	r3, [sp, #0]
 80010c8:	462a      	mov	r2, r5
 80010ca:	4b16      	ldr	r3, [pc, #88]	; (8001124 <_vfiprintf_r+0x258>)
 80010cc:	a904      	add	r1, sp, #16
 80010ce:	4630      	mov	r0, r6
 80010d0:	f3af 8000 	nop.w
 80010d4:	4607      	mov	r7, r0
 80010d6:	1c78      	adds	r0, r7, #1
 80010d8:	d1d6      	bne.n	8001088 <_vfiprintf_r+0x1bc>
 80010da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010dc:	07d9      	lsls	r1, r3, #31
 80010de:	d405      	bmi.n	80010ec <_vfiprintf_r+0x220>
 80010e0:	89ab      	ldrh	r3, [r5, #12]
 80010e2:	059a      	lsls	r2, r3, #22
 80010e4:	d402      	bmi.n	80010ec <_vfiprintf_r+0x220>
 80010e6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010e8:	f7ff fd7f 	bl	8000bea <__retarget_lock_release_recursive>
 80010ec:	89ab      	ldrh	r3, [r5, #12]
 80010ee:	065b      	lsls	r3, r3, #25
 80010f0:	f53f af12 	bmi.w	8000f18 <_vfiprintf_r+0x4c>
 80010f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80010f6:	e711      	b.n	8000f1c <_vfiprintf_r+0x50>
 80010f8:	ab03      	add	r3, sp, #12
 80010fa:	9300      	str	r3, [sp, #0]
 80010fc:	462a      	mov	r2, r5
 80010fe:	4b09      	ldr	r3, [pc, #36]	; (8001124 <_vfiprintf_r+0x258>)
 8001100:	a904      	add	r1, sp, #16
 8001102:	4630      	mov	r0, r6
 8001104:	f000 f880 	bl	8001208 <_printf_i>
 8001108:	e7e4      	b.n	80010d4 <_vfiprintf_r+0x208>
 800110a:	bf00      	nop
 800110c:	08001678 	.word	0x08001678
 8001110:	08001698 	.word	0x08001698
 8001114:	08001658 	.word	0x08001658
 8001118:	080016b8 	.word	0x080016b8
 800111c:	080016c2 	.word	0x080016c2
 8001120:	00000000 	.word	0x00000000
 8001124:	08000ea7 	.word	0x08000ea7
 8001128:	080016be 	.word	0x080016be

0800112c <_printf_common>:
 800112c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001130:	4616      	mov	r6, r2
 8001132:	4699      	mov	r9, r3
 8001134:	688a      	ldr	r2, [r1, #8]
 8001136:	690b      	ldr	r3, [r1, #16]
 8001138:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800113c:	4293      	cmp	r3, r2
 800113e:	bfb8      	it	lt
 8001140:	4613      	movlt	r3, r2
 8001142:	6033      	str	r3, [r6, #0]
 8001144:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001148:	4607      	mov	r7, r0
 800114a:	460c      	mov	r4, r1
 800114c:	b10a      	cbz	r2, 8001152 <_printf_common+0x26>
 800114e:	3301      	adds	r3, #1
 8001150:	6033      	str	r3, [r6, #0]
 8001152:	6823      	ldr	r3, [r4, #0]
 8001154:	0699      	lsls	r1, r3, #26
 8001156:	bf42      	ittt	mi
 8001158:	6833      	ldrmi	r3, [r6, #0]
 800115a:	3302      	addmi	r3, #2
 800115c:	6033      	strmi	r3, [r6, #0]
 800115e:	6825      	ldr	r5, [r4, #0]
 8001160:	f015 0506 	ands.w	r5, r5, #6
 8001164:	d106      	bne.n	8001174 <_printf_common+0x48>
 8001166:	f104 0a19 	add.w	sl, r4, #25
 800116a:	68e3      	ldr	r3, [r4, #12]
 800116c:	6832      	ldr	r2, [r6, #0]
 800116e:	1a9b      	subs	r3, r3, r2
 8001170:	42ab      	cmp	r3, r5
 8001172:	dc26      	bgt.n	80011c2 <_printf_common+0x96>
 8001174:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001178:	1e13      	subs	r3, r2, #0
 800117a:	6822      	ldr	r2, [r4, #0]
 800117c:	bf18      	it	ne
 800117e:	2301      	movne	r3, #1
 8001180:	0692      	lsls	r2, r2, #26
 8001182:	d42b      	bmi.n	80011dc <_printf_common+0xb0>
 8001184:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001188:	4649      	mov	r1, r9
 800118a:	4638      	mov	r0, r7
 800118c:	47c0      	blx	r8
 800118e:	3001      	adds	r0, #1
 8001190:	d01e      	beq.n	80011d0 <_printf_common+0xa4>
 8001192:	6823      	ldr	r3, [r4, #0]
 8001194:	68e5      	ldr	r5, [r4, #12]
 8001196:	6832      	ldr	r2, [r6, #0]
 8001198:	f003 0306 	and.w	r3, r3, #6
 800119c:	2b04      	cmp	r3, #4
 800119e:	bf08      	it	eq
 80011a0:	1aad      	subeq	r5, r5, r2
 80011a2:	68a3      	ldr	r3, [r4, #8]
 80011a4:	6922      	ldr	r2, [r4, #16]
 80011a6:	bf0c      	ite	eq
 80011a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80011ac:	2500      	movne	r5, #0
 80011ae:	4293      	cmp	r3, r2
 80011b0:	bfc4      	itt	gt
 80011b2:	1a9b      	subgt	r3, r3, r2
 80011b4:	18ed      	addgt	r5, r5, r3
 80011b6:	2600      	movs	r6, #0
 80011b8:	341a      	adds	r4, #26
 80011ba:	42b5      	cmp	r5, r6
 80011bc:	d11a      	bne.n	80011f4 <_printf_common+0xc8>
 80011be:	2000      	movs	r0, #0
 80011c0:	e008      	b.n	80011d4 <_printf_common+0xa8>
 80011c2:	2301      	movs	r3, #1
 80011c4:	4652      	mov	r2, sl
 80011c6:	4649      	mov	r1, r9
 80011c8:	4638      	mov	r0, r7
 80011ca:	47c0      	blx	r8
 80011cc:	3001      	adds	r0, #1
 80011ce:	d103      	bne.n	80011d8 <_printf_common+0xac>
 80011d0:	f04f 30ff 	mov.w	r0, #4294967295
 80011d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011d8:	3501      	adds	r5, #1
 80011da:	e7c6      	b.n	800116a <_printf_common+0x3e>
 80011dc:	18e1      	adds	r1, r4, r3
 80011de:	1c5a      	adds	r2, r3, #1
 80011e0:	2030      	movs	r0, #48	; 0x30
 80011e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80011e6:	4422      	add	r2, r4
 80011e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80011ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80011f0:	3302      	adds	r3, #2
 80011f2:	e7c7      	b.n	8001184 <_printf_common+0x58>
 80011f4:	2301      	movs	r3, #1
 80011f6:	4622      	mov	r2, r4
 80011f8:	4649      	mov	r1, r9
 80011fa:	4638      	mov	r0, r7
 80011fc:	47c0      	blx	r8
 80011fe:	3001      	adds	r0, #1
 8001200:	d0e6      	beq.n	80011d0 <_printf_common+0xa4>
 8001202:	3601      	adds	r6, #1
 8001204:	e7d9      	b.n	80011ba <_printf_common+0x8e>
	...

08001208 <_printf_i>:
 8001208:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800120c:	7e0f      	ldrb	r7, [r1, #24]
 800120e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001210:	2f78      	cmp	r7, #120	; 0x78
 8001212:	4691      	mov	r9, r2
 8001214:	4680      	mov	r8, r0
 8001216:	460c      	mov	r4, r1
 8001218:	469a      	mov	sl, r3
 800121a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800121e:	d807      	bhi.n	8001230 <_printf_i+0x28>
 8001220:	2f62      	cmp	r7, #98	; 0x62
 8001222:	d80a      	bhi.n	800123a <_printf_i+0x32>
 8001224:	2f00      	cmp	r7, #0
 8001226:	f000 80d8 	beq.w	80013da <_printf_i+0x1d2>
 800122a:	2f58      	cmp	r7, #88	; 0x58
 800122c:	f000 80a3 	beq.w	8001376 <_printf_i+0x16e>
 8001230:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001234:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001238:	e03a      	b.n	80012b0 <_printf_i+0xa8>
 800123a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800123e:	2b15      	cmp	r3, #21
 8001240:	d8f6      	bhi.n	8001230 <_printf_i+0x28>
 8001242:	a101      	add	r1, pc, #4	; (adr r1, 8001248 <_printf_i+0x40>)
 8001244:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001248:	080012a1 	.word	0x080012a1
 800124c:	080012b5 	.word	0x080012b5
 8001250:	08001231 	.word	0x08001231
 8001254:	08001231 	.word	0x08001231
 8001258:	08001231 	.word	0x08001231
 800125c:	08001231 	.word	0x08001231
 8001260:	080012b5 	.word	0x080012b5
 8001264:	08001231 	.word	0x08001231
 8001268:	08001231 	.word	0x08001231
 800126c:	08001231 	.word	0x08001231
 8001270:	08001231 	.word	0x08001231
 8001274:	080013c1 	.word	0x080013c1
 8001278:	080012e5 	.word	0x080012e5
 800127c:	080013a3 	.word	0x080013a3
 8001280:	08001231 	.word	0x08001231
 8001284:	08001231 	.word	0x08001231
 8001288:	080013e3 	.word	0x080013e3
 800128c:	08001231 	.word	0x08001231
 8001290:	080012e5 	.word	0x080012e5
 8001294:	08001231 	.word	0x08001231
 8001298:	08001231 	.word	0x08001231
 800129c:	080013ab 	.word	0x080013ab
 80012a0:	682b      	ldr	r3, [r5, #0]
 80012a2:	1d1a      	adds	r2, r3, #4
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	602a      	str	r2, [r5, #0]
 80012a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80012b0:	2301      	movs	r3, #1
 80012b2:	e0a3      	b.n	80013fc <_printf_i+0x1f4>
 80012b4:	6820      	ldr	r0, [r4, #0]
 80012b6:	6829      	ldr	r1, [r5, #0]
 80012b8:	0606      	lsls	r6, r0, #24
 80012ba:	f101 0304 	add.w	r3, r1, #4
 80012be:	d50a      	bpl.n	80012d6 <_printf_i+0xce>
 80012c0:	680e      	ldr	r6, [r1, #0]
 80012c2:	602b      	str	r3, [r5, #0]
 80012c4:	2e00      	cmp	r6, #0
 80012c6:	da03      	bge.n	80012d0 <_printf_i+0xc8>
 80012c8:	232d      	movs	r3, #45	; 0x2d
 80012ca:	4276      	negs	r6, r6
 80012cc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012d0:	485e      	ldr	r0, [pc, #376]	; (800144c <_printf_i+0x244>)
 80012d2:	230a      	movs	r3, #10
 80012d4:	e019      	b.n	800130a <_printf_i+0x102>
 80012d6:	680e      	ldr	r6, [r1, #0]
 80012d8:	602b      	str	r3, [r5, #0]
 80012da:	f010 0f40 	tst.w	r0, #64	; 0x40
 80012de:	bf18      	it	ne
 80012e0:	b236      	sxthne	r6, r6
 80012e2:	e7ef      	b.n	80012c4 <_printf_i+0xbc>
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	6820      	ldr	r0, [r4, #0]
 80012e8:	1d19      	adds	r1, r3, #4
 80012ea:	6029      	str	r1, [r5, #0]
 80012ec:	0601      	lsls	r1, r0, #24
 80012ee:	d501      	bpl.n	80012f4 <_printf_i+0xec>
 80012f0:	681e      	ldr	r6, [r3, #0]
 80012f2:	e002      	b.n	80012fa <_printf_i+0xf2>
 80012f4:	0646      	lsls	r6, r0, #25
 80012f6:	d5fb      	bpl.n	80012f0 <_printf_i+0xe8>
 80012f8:	881e      	ldrh	r6, [r3, #0]
 80012fa:	4854      	ldr	r0, [pc, #336]	; (800144c <_printf_i+0x244>)
 80012fc:	2f6f      	cmp	r7, #111	; 0x6f
 80012fe:	bf0c      	ite	eq
 8001300:	2308      	moveq	r3, #8
 8001302:	230a      	movne	r3, #10
 8001304:	2100      	movs	r1, #0
 8001306:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800130a:	6865      	ldr	r5, [r4, #4]
 800130c:	60a5      	str	r5, [r4, #8]
 800130e:	2d00      	cmp	r5, #0
 8001310:	bfa2      	ittt	ge
 8001312:	6821      	ldrge	r1, [r4, #0]
 8001314:	f021 0104 	bicge.w	r1, r1, #4
 8001318:	6021      	strge	r1, [r4, #0]
 800131a:	b90e      	cbnz	r6, 8001320 <_printf_i+0x118>
 800131c:	2d00      	cmp	r5, #0
 800131e:	d04d      	beq.n	80013bc <_printf_i+0x1b4>
 8001320:	4615      	mov	r5, r2
 8001322:	fbb6 f1f3 	udiv	r1, r6, r3
 8001326:	fb03 6711 	mls	r7, r3, r1, r6
 800132a:	5dc7      	ldrb	r7, [r0, r7]
 800132c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001330:	4637      	mov	r7, r6
 8001332:	42bb      	cmp	r3, r7
 8001334:	460e      	mov	r6, r1
 8001336:	d9f4      	bls.n	8001322 <_printf_i+0x11a>
 8001338:	2b08      	cmp	r3, #8
 800133a:	d10b      	bne.n	8001354 <_printf_i+0x14c>
 800133c:	6823      	ldr	r3, [r4, #0]
 800133e:	07de      	lsls	r6, r3, #31
 8001340:	d508      	bpl.n	8001354 <_printf_i+0x14c>
 8001342:	6923      	ldr	r3, [r4, #16]
 8001344:	6861      	ldr	r1, [r4, #4]
 8001346:	4299      	cmp	r1, r3
 8001348:	bfde      	ittt	le
 800134a:	2330      	movle	r3, #48	; 0x30
 800134c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001350:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001354:	1b52      	subs	r2, r2, r5
 8001356:	6122      	str	r2, [r4, #16]
 8001358:	f8cd a000 	str.w	sl, [sp]
 800135c:	464b      	mov	r3, r9
 800135e:	aa03      	add	r2, sp, #12
 8001360:	4621      	mov	r1, r4
 8001362:	4640      	mov	r0, r8
 8001364:	f7ff fee2 	bl	800112c <_printf_common>
 8001368:	3001      	adds	r0, #1
 800136a:	d14c      	bne.n	8001406 <_printf_i+0x1fe>
 800136c:	f04f 30ff 	mov.w	r0, #4294967295
 8001370:	b004      	add	sp, #16
 8001372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001376:	4835      	ldr	r0, [pc, #212]	; (800144c <_printf_i+0x244>)
 8001378:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800137c:	6829      	ldr	r1, [r5, #0]
 800137e:	6823      	ldr	r3, [r4, #0]
 8001380:	f851 6b04 	ldr.w	r6, [r1], #4
 8001384:	6029      	str	r1, [r5, #0]
 8001386:	061d      	lsls	r5, r3, #24
 8001388:	d514      	bpl.n	80013b4 <_printf_i+0x1ac>
 800138a:	07df      	lsls	r7, r3, #31
 800138c:	bf44      	itt	mi
 800138e:	f043 0320 	orrmi.w	r3, r3, #32
 8001392:	6023      	strmi	r3, [r4, #0]
 8001394:	b91e      	cbnz	r6, 800139e <_printf_i+0x196>
 8001396:	6823      	ldr	r3, [r4, #0]
 8001398:	f023 0320 	bic.w	r3, r3, #32
 800139c:	6023      	str	r3, [r4, #0]
 800139e:	2310      	movs	r3, #16
 80013a0:	e7b0      	b.n	8001304 <_printf_i+0xfc>
 80013a2:	6823      	ldr	r3, [r4, #0]
 80013a4:	f043 0320 	orr.w	r3, r3, #32
 80013a8:	6023      	str	r3, [r4, #0]
 80013aa:	2378      	movs	r3, #120	; 0x78
 80013ac:	4828      	ldr	r0, [pc, #160]	; (8001450 <_printf_i+0x248>)
 80013ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80013b2:	e7e3      	b.n	800137c <_printf_i+0x174>
 80013b4:	0659      	lsls	r1, r3, #25
 80013b6:	bf48      	it	mi
 80013b8:	b2b6      	uxthmi	r6, r6
 80013ba:	e7e6      	b.n	800138a <_printf_i+0x182>
 80013bc:	4615      	mov	r5, r2
 80013be:	e7bb      	b.n	8001338 <_printf_i+0x130>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	6826      	ldr	r6, [r4, #0]
 80013c4:	6961      	ldr	r1, [r4, #20]
 80013c6:	1d18      	adds	r0, r3, #4
 80013c8:	6028      	str	r0, [r5, #0]
 80013ca:	0635      	lsls	r5, r6, #24
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	d501      	bpl.n	80013d4 <_printf_i+0x1cc>
 80013d0:	6019      	str	r1, [r3, #0]
 80013d2:	e002      	b.n	80013da <_printf_i+0x1d2>
 80013d4:	0670      	lsls	r0, r6, #25
 80013d6:	d5fb      	bpl.n	80013d0 <_printf_i+0x1c8>
 80013d8:	8019      	strh	r1, [r3, #0]
 80013da:	2300      	movs	r3, #0
 80013dc:	6123      	str	r3, [r4, #16]
 80013de:	4615      	mov	r5, r2
 80013e0:	e7ba      	b.n	8001358 <_printf_i+0x150>
 80013e2:	682b      	ldr	r3, [r5, #0]
 80013e4:	1d1a      	adds	r2, r3, #4
 80013e6:	602a      	str	r2, [r5, #0]
 80013e8:	681d      	ldr	r5, [r3, #0]
 80013ea:	6862      	ldr	r2, [r4, #4]
 80013ec:	2100      	movs	r1, #0
 80013ee:	4628      	mov	r0, r5
 80013f0:	f7fe fefe 	bl	80001f0 <memchr>
 80013f4:	b108      	cbz	r0, 80013fa <_printf_i+0x1f2>
 80013f6:	1b40      	subs	r0, r0, r5
 80013f8:	6060      	str	r0, [r4, #4]
 80013fa:	6863      	ldr	r3, [r4, #4]
 80013fc:	6123      	str	r3, [r4, #16]
 80013fe:	2300      	movs	r3, #0
 8001400:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001404:	e7a8      	b.n	8001358 <_printf_i+0x150>
 8001406:	6923      	ldr	r3, [r4, #16]
 8001408:	462a      	mov	r2, r5
 800140a:	4649      	mov	r1, r9
 800140c:	4640      	mov	r0, r8
 800140e:	47d0      	blx	sl
 8001410:	3001      	adds	r0, #1
 8001412:	d0ab      	beq.n	800136c <_printf_i+0x164>
 8001414:	6823      	ldr	r3, [r4, #0]
 8001416:	079b      	lsls	r3, r3, #30
 8001418:	d413      	bmi.n	8001442 <_printf_i+0x23a>
 800141a:	68e0      	ldr	r0, [r4, #12]
 800141c:	9b03      	ldr	r3, [sp, #12]
 800141e:	4298      	cmp	r0, r3
 8001420:	bfb8      	it	lt
 8001422:	4618      	movlt	r0, r3
 8001424:	e7a4      	b.n	8001370 <_printf_i+0x168>
 8001426:	2301      	movs	r3, #1
 8001428:	4632      	mov	r2, r6
 800142a:	4649      	mov	r1, r9
 800142c:	4640      	mov	r0, r8
 800142e:	47d0      	blx	sl
 8001430:	3001      	adds	r0, #1
 8001432:	d09b      	beq.n	800136c <_printf_i+0x164>
 8001434:	3501      	adds	r5, #1
 8001436:	68e3      	ldr	r3, [r4, #12]
 8001438:	9903      	ldr	r1, [sp, #12]
 800143a:	1a5b      	subs	r3, r3, r1
 800143c:	42ab      	cmp	r3, r5
 800143e:	dcf2      	bgt.n	8001426 <_printf_i+0x21e>
 8001440:	e7eb      	b.n	800141a <_printf_i+0x212>
 8001442:	2500      	movs	r5, #0
 8001444:	f104 0619 	add.w	r6, r4, #25
 8001448:	e7f5      	b.n	8001436 <_printf_i+0x22e>
 800144a:	bf00      	nop
 800144c:	080016c9 	.word	0x080016c9
 8001450:	080016da 	.word	0x080016da

08001454 <_sbrk_r>:
 8001454:	b538      	push	{r3, r4, r5, lr}
 8001456:	4d06      	ldr	r5, [pc, #24]	; (8001470 <_sbrk_r+0x1c>)
 8001458:	2300      	movs	r3, #0
 800145a:	4604      	mov	r4, r0
 800145c:	4608      	mov	r0, r1
 800145e:	602b      	str	r3, [r5, #0]
 8001460:	f7ff f82a 	bl	80004b8 <_sbrk>
 8001464:	1c43      	adds	r3, r0, #1
 8001466:	d102      	bne.n	800146e <_sbrk_r+0x1a>
 8001468:	682b      	ldr	r3, [r5, #0]
 800146a:	b103      	cbz	r3, 800146e <_sbrk_r+0x1a>
 800146c:	6023      	str	r3, [r4, #0]
 800146e:	bd38      	pop	{r3, r4, r5, pc}
 8001470:	20000090 	.word	0x20000090

08001474 <__sread>:
 8001474:	b510      	push	{r4, lr}
 8001476:	460c      	mov	r4, r1
 8001478:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800147c:	f000 f8a0 	bl	80015c0 <_read_r>
 8001480:	2800      	cmp	r0, #0
 8001482:	bfab      	itete	ge
 8001484:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001486:	89a3      	ldrhlt	r3, [r4, #12]
 8001488:	181b      	addge	r3, r3, r0
 800148a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800148e:	bfac      	ite	ge
 8001490:	6563      	strge	r3, [r4, #84]	; 0x54
 8001492:	81a3      	strhlt	r3, [r4, #12]
 8001494:	bd10      	pop	{r4, pc}

08001496 <__swrite>:
 8001496:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800149a:	461f      	mov	r7, r3
 800149c:	898b      	ldrh	r3, [r1, #12]
 800149e:	05db      	lsls	r3, r3, #23
 80014a0:	4605      	mov	r5, r0
 80014a2:	460c      	mov	r4, r1
 80014a4:	4616      	mov	r6, r2
 80014a6:	d505      	bpl.n	80014b4 <__swrite+0x1e>
 80014a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ac:	2302      	movs	r3, #2
 80014ae:	2200      	movs	r2, #0
 80014b0:	f000 f868 	bl	8001584 <_lseek_r>
 80014b4:	89a3      	ldrh	r3, [r4, #12]
 80014b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014be:	81a3      	strh	r3, [r4, #12]
 80014c0:	4632      	mov	r2, r6
 80014c2:	463b      	mov	r3, r7
 80014c4:	4628      	mov	r0, r5
 80014c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014ca:	f000 b817 	b.w	80014fc <_write_r>

080014ce <__sseek>:
 80014ce:	b510      	push	{r4, lr}
 80014d0:	460c      	mov	r4, r1
 80014d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014d6:	f000 f855 	bl	8001584 <_lseek_r>
 80014da:	1c43      	adds	r3, r0, #1
 80014dc:	89a3      	ldrh	r3, [r4, #12]
 80014de:	bf15      	itete	ne
 80014e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80014e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014ea:	81a3      	strheq	r3, [r4, #12]
 80014ec:	bf18      	it	ne
 80014ee:	81a3      	strhne	r3, [r4, #12]
 80014f0:	bd10      	pop	{r4, pc}

080014f2 <__sclose>:
 80014f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014f6:	f000 b813 	b.w	8001520 <_close_r>
	...

080014fc <_write_r>:
 80014fc:	b538      	push	{r3, r4, r5, lr}
 80014fe:	4d07      	ldr	r5, [pc, #28]	; (800151c <_write_r+0x20>)
 8001500:	4604      	mov	r4, r0
 8001502:	4608      	mov	r0, r1
 8001504:	4611      	mov	r1, r2
 8001506:	2200      	movs	r2, #0
 8001508:	602a      	str	r2, [r5, #0]
 800150a:	461a      	mov	r2, r3
 800150c:	f7fe ff83 	bl	8000416 <_write>
 8001510:	1c43      	adds	r3, r0, #1
 8001512:	d102      	bne.n	800151a <_write_r+0x1e>
 8001514:	682b      	ldr	r3, [r5, #0]
 8001516:	b103      	cbz	r3, 800151a <_write_r+0x1e>
 8001518:	6023      	str	r3, [r4, #0]
 800151a:	bd38      	pop	{r3, r4, r5, pc}
 800151c:	20000090 	.word	0x20000090

08001520 <_close_r>:
 8001520:	b538      	push	{r3, r4, r5, lr}
 8001522:	4d06      	ldr	r5, [pc, #24]	; (800153c <_close_r+0x1c>)
 8001524:	2300      	movs	r3, #0
 8001526:	4604      	mov	r4, r0
 8001528:	4608      	mov	r0, r1
 800152a:	602b      	str	r3, [r5, #0]
 800152c:	f7fe ff8f 	bl	800044e <_close>
 8001530:	1c43      	adds	r3, r0, #1
 8001532:	d102      	bne.n	800153a <_close_r+0x1a>
 8001534:	682b      	ldr	r3, [r5, #0]
 8001536:	b103      	cbz	r3, 800153a <_close_r+0x1a>
 8001538:	6023      	str	r3, [r4, #0]
 800153a:	bd38      	pop	{r3, r4, r5, pc}
 800153c:	20000090 	.word	0x20000090

08001540 <_fstat_r>:
 8001540:	b538      	push	{r3, r4, r5, lr}
 8001542:	4d07      	ldr	r5, [pc, #28]	; (8001560 <_fstat_r+0x20>)
 8001544:	2300      	movs	r3, #0
 8001546:	4604      	mov	r4, r0
 8001548:	4608      	mov	r0, r1
 800154a:	4611      	mov	r1, r2
 800154c:	602b      	str	r3, [r5, #0]
 800154e:	f7fe ff8a 	bl	8000466 <_fstat>
 8001552:	1c43      	adds	r3, r0, #1
 8001554:	d102      	bne.n	800155c <_fstat_r+0x1c>
 8001556:	682b      	ldr	r3, [r5, #0]
 8001558:	b103      	cbz	r3, 800155c <_fstat_r+0x1c>
 800155a:	6023      	str	r3, [r4, #0]
 800155c:	bd38      	pop	{r3, r4, r5, pc}
 800155e:	bf00      	nop
 8001560:	20000090 	.word	0x20000090

08001564 <_isatty_r>:
 8001564:	b538      	push	{r3, r4, r5, lr}
 8001566:	4d06      	ldr	r5, [pc, #24]	; (8001580 <_isatty_r+0x1c>)
 8001568:	2300      	movs	r3, #0
 800156a:	4604      	mov	r4, r0
 800156c:	4608      	mov	r0, r1
 800156e:	602b      	str	r3, [r5, #0]
 8001570:	f7fe ff89 	bl	8000486 <_isatty>
 8001574:	1c43      	adds	r3, r0, #1
 8001576:	d102      	bne.n	800157e <_isatty_r+0x1a>
 8001578:	682b      	ldr	r3, [r5, #0]
 800157a:	b103      	cbz	r3, 800157e <_isatty_r+0x1a>
 800157c:	6023      	str	r3, [r4, #0]
 800157e:	bd38      	pop	{r3, r4, r5, pc}
 8001580:	20000090 	.word	0x20000090

08001584 <_lseek_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4d07      	ldr	r5, [pc, #28]	; (80015a4 <_lseek_r+0x20>)
 8001588:	4604      	mov	r4, r0
 800158a:	4608      	mov	r0, r1
 800158c:	4611      	mov	r1, r2
 800158e:	2200      	movs	r2, #0
 8001590:	602a      	str	r2, [r5, #0]
 8001592:	461a      	mov	r2, r3
 8001594:	f7fe ff82 	bl	800049c <_lseek>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_lseek_r+0x1e>
 800159c:	682b      	ldr	r3, [r5, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_lseek_r+0x1e>
 80015a0:	6023      	str	r3, [r4, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	20000090 	.word	0x20000090

080015a8 <__malloc_lock>:
 80015a8:	4801      	ldr	r0, [pc, #4]	; (80015b0 <__malloc_lock+0x8>)
 80015aa:	f7ff bb1d 	b.w	8000be8 <__retarget_lock_acquire_recursive>
 80015ae:	bf00      	nop
 80015b0:	20000084 	.word	0x20000084

080015b4 <__malloc_unlock>:
 80015b4:	4801      	ldr	r0, [pc, #4]	; (80015bc <__malloc_unlock+0x8>)
 80015b6:	f7ff bb18 	b.w	8000bea <__retarget_lock_release_recursive>
 80015ba:	bf00      	nop
 80015bc:	20000084 	.word	0x20000084

080015c0 <_read_r>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d07      	ldr	r5, [pc, #28]	; (80015e0 <_read_r+0x20>)
 80015c4:	4604      	mov	r4, r0
 80015c6:	4608      	mov	r0, r1
 80015c8:	4611      	mov	r1, r2
 80015ca:	2200      	movs	r2, #0
 80015cc:	602a      	str	r2, [r5, #0]
 80015ce:	461a      	mov	r2, r3
 80015d0:	f7fe ff04 	bl	80003dc <_read>
 80015d4:	1c43      	adds	r3, r0, #1
 80015d6:	d102      	bne.n	80015de <_read_r+0x1e>
 80015d8:	682b      	ldr	r3, [r5, #0]
 80015da:	b103      	cbz	r3, 80015de <_read_r+0x1e>
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	bd38      	pop	{r3, r4, r5, pc}
 80015e0:	20000090 	.word	0x20000090

080015e4 <_init>:
 80015e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015e6:	bf00      	nop
 80015e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ea:	bc08      	pop	{r3}
 80015ec:	469e      	mov	lr, r3
 80015ee:	4770      	bx	lr

080015f0 <_fini>:
 80015f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015f2:	bf00      	nop
 80015f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015f6:	bc08      	pop	{r3}
 80015f8:	469e      	mov	lr, r3
 80015fa:	4770      	bx	lr
